 
Процедура Тестовая(ТаблицыОбъекта) Экспорт
	//ТаблицаПерсонал = Справочники.ОбъектыСистемы.ПолучитьСсылку(Новый УникальныйИдентификатор("6660783b-6859-11eb-91ca-bcaec5cbeec1"));
	//ТаблицаПерсонал = Справочники.ОбъектыСистемы.НайтиПоРеквизиту("СистемноеНаименование", "ТаблицаПерсонал");
	ОС_ТаблицаПерсонал = Справочники.КонстантыИНастройки.ТестоваяКонстанта.ОбъектСистемы;
	
	Если Не ЗначениеЗаполнено(ОС_ТаблицаПерсонал) Тогда
		Сообщить("Не выполнена настройка алгоритма");
		
		Возврат;
	КонецЕсли;
	
	Для Каждого ТаблицаОбъекта Из ТаблицыОбъекта Цикл
		Если ТаблицаОбъекта.Ключ = ОС_ТаблицаПерсонал Тогда
		//Если ТаблицаОбъекта.Ключ.СистемноеНаименование = "ТаблицаПерсонал" Тогда
			Для Каждого СтрокаТаблицы Из ТаблицаОбъекта.Значение Цикл
				СтрокаТаблицы.ВидДвижения = СтрокаТаблицы.Количество_ >= 0;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СобратьПериоды(Алгоритм, ТаблицыОбъекта, ДокументОбъект) Экспорт
	СтрокаПараметров = Алгоритм.ПараметрыАлгоритма.Найти("ГруппаПараметров1", "ИмяГруппыПараметров");
	
	ПериодыДляРазмещения = ДокументОбъект.ДополнительныеСвойства.ТаблицыОбъекта[СтрокаПараметров.Параметр1];
	ТаблицаНовыхДвижений = ДокументОбъект.ДополнительныеСвойства.ТаблицыОбъекта[СтрокаПараметров.Параметр6];
	ТаблицаНовыхДвижений.Очистить();
	
	СтрокаРаботник = ДокументОбъект.ДополнительныеСвойства.ТаблицаКолонок.Найти(СтрокаПараметров.Параметр4, "Колонка");
	
	МассивДатС = ПериодыДляРазмещения.ВыгрузитьКолонку("ДатаС");
	МассивДатПо = ПериодыДляРазмещения.ВыгрузитьКолонку("ДатаПо");
	
	ПоискДат = Новый СписокЗначений;
	ПоискДат.ЗагрузитьЗначения(МассивДатС);
	ПоискДат.СортироватьПоЗначению();
	
	МинимальнаяДата = ПоискДат[0];
	
	ПоискДат.ЗагрузитьЗначения(МассивДатПо);
	ПоискДат.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
	
	МаксимальнаяДата = ПоискДат[0];
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаДату", Новый Граница(ДокументОбъект.Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("РазрезДанных", СтрокаПараметров.Параметр5);
	Запрос.УстановитьПараметр("Работник", СтрокаРаботник.Значение);
	Запрос.УстановитьПараметр("ДатаС", МинимальнаяДата.Значение);
	Запрос.УстановитьПараметр("ДатаПо", МаксимальнаяДата.Значение);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГрафикиРаботниковОстатки.Измерение2 КАК ДатаС,
	|	ГрафикиРаботниковОстатки.Измерение3 КАК ДатаПо,
	|	ГрафикиРаботниковОстатки.Измерение4 КАК ГрафикРаботы,
	|	ГрафикиРаботниковОстатки.Измерение2 > &ДатаС
	|		И ГрафикиРаботниковОстатки.Измерение3 < &ДатаПо КАК Внутри
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	РегистрНакопления.УниверсальныйРН_ОС.Остатки(
	|			&НаДату,
	|			РазрезДанных = &РазрезДанных
	|				И Измерение1 = &Работник
	|				И (ВЫРАЗИТЬ(Измерение2 КАК ДАТА)) < &ДатаПо
	|				И (ВЫРАЗИТЬ(Измерение3 КАК ДАТА)) >= &ДатаС) КАК ГрафикиРаботниковОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.ДатаС КАК ДатаС,
	|	ВТ_Периоды.ДатаПо КАК ДатаПо,
	|	ВТ_Периоды.ГрафикРаботы КАК ГрафикРаботы
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|ГДЕ
	|	НЕ ВТ_Периоды.Внутри
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.ДатаС КАК ДатаС,
	|	ВТ_Периоды.ДатаПо КАК ДатаПо,
	|	ВТ_Периоды.ГрафикРаботы КАК ГрафикРаботы
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|ГДЕ
	|	ВТ_Периоды.Внутри";
	Результат = Запрос.ВыполнитьПакет();
	
	ПограничныеПериоды = Результат[1].Выгрузить();
	ВнутренниеПериоды = Результат[2].Выгрузить();
	
	Для Каждого СтрокаПограничныйПериод Из ПограничныеПериоды Цикл
		Если СтрокаПограничныйПериод.ДатаС <= МинимальнаяДата.Значение Тогда
			ДатаС = СтрокаПограничныйПериод.ДатаС;
			ДатаПо = МинимальнаяДата.Значение - ?(МинимальнаяДата.Значение = НачалоДня(МинимальнаяДата.Значение), 1, 0);
			
			Если ДатаС < ДатаПо Тогда
				НоваяСтрокаТаблицаНовыхДвижений = ТаблицаНовыхДвижений.Добавить();
				НоваяСтрокаТаблицаНовыхДвижений.ВидДвижения = Истина; // Приход
				НоваяСтрокаТаблицаНовыхДвижений.ДатаС = СтрокаПограничныйПериод.ДатаС;
				НоваяСтрокаТаблицаНовыхДвижений.ДатаПо = МинимальнаяДата.Значение - ?(МинимальнаяДата.Значение = НачалоДня(МинимальнаяДата.Значение), 1, 0);
				НоваяСтрокаТаблицаНовыхДвижений.ГрафикРаботы = СтрокаПограничныйПериод.ГрафикРаботы;
				НоваяСтрокаТаблицаНовыхДвижений.Баланс_ = 1;
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаПограничныйПериод.ДатаПо >= МаксимальнаяДата.Значение Тогда
			ДатаС = МаксимальнаяДата.Значение + ?(МаксимальнаяДата.Значение = НачалоДня(МаксимальнаяДата.Значение), 0, 1);
			ДатаПо = СтрокаПограничныйПериод.ДатаПо;
			
			Если ДатаС < ДатаПо Тогда
				НоваяСтрокаТаблицаНовыхДвижений = ТаблицаНовыхДвижений.Добавить();
				НоваяСтрокаТаблицаНовыхДвижений.ВидДвижения = Истина; // Приход
				НоваяСтрокаТаблицаНовыхДвижений.ДатаС = ДатаС;
				НоваяСтрокаТаблицаНовыхДвижений.ДатаПо = ДатаПо;
				НоваяСтрокаТаблицаНовыхДвижений.ГрафикРаботы = СтрокаПограничныйПериод.ГрафикРаботы;
				НоваяСтрокаТаблицаНовыхДвижений.Баланс_ = 1;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрокаТаблицаНовыхДвижений = ТаблицаНовыхДвижений.Добавить();
		НоваяСтрокаТаблицаНовыхДвижений.ВидДвижения = Ложь; // Расход
		НоваяСтрокаТаблицаНовыхДвижений.ДатаС = СтрокаПограничныйПериод.ДатаС;
		НоваяСтрокаТаблицаНовыхДвижений.ДатаПо = СтрокаПограничныйПериод.ДатаПо;
		НоваяСтрокаТаблицаНовыхДвижений.ГрафикРаботы = СтрокаПограничныйПериод.ГрафикРаботы;
		НоваяСтрокаТаблицаНовыхДвижений.Баланс_ = 1;
	КонецЦикла;
	
	Для Каждого СтрокаПериодыДляРазмещения Из ПериодыДляРазмещения Цикл
		НоваяСтрокаТаблицаНовыхДвижений = ТаблицаНовыхДвижений.Добавить();
		НоваяСтрокаТаблицаНовыхДвижений.ВидДвижения = ?(СтрокаПериодыДляРазмещения.Исключить_, Ложь, Истина);
		НоваяСтрокаТаблицаНовыхДвижений.ДатаС = СтрокаПериодыДляРазмещения.ДатаС;
		НоваяСтрокаТаблицаНовыхДвижений.ДатаПо = СтрокаПериодыДляРазмещения.ДатаПо;
		НоваяСтрокаТаблицаНовыхДвижений.ГрафикРаботы = СтрокаПериодыДляРазмещения.ГрафикРаботы;
		НоваяСтрокаТаблицаНовыхДвижений.Баланс_ = 1;
	КонецЦикла;
	
	Для Каждого СтрокаВнутренниеПериоды Из ВнутренниеПериоды Цикл
		НоваяСтрокаТаблицаНовыхДвижений = ТаблицаНовыхДвижений.Добавить();
		НоваяСтрокаТаблицаНовыхДвижений.ВидДвижения = Ложь; // Расход
		НоваяСтрокаТаблицаНовыхДвижений.ДатаС = СтрокаВнутренниеПериоды.ДатаС;
		НоваяСтрокаТаблицаНовыхДвижений.ДатаПо = СтрокаВнутренниеПериоды.ДатаПо;
		НоваяСтрокаТаблицаНовыхДвижений.ГрафикРаботы = СтрокаВнутренниеПериоды.ГрафикРаботы;
		НоваяСтрокаТаблицаНовыхДвижений.Баланс_ = 1;
	КонецЦикла;
	
	ТаблицаНовыхДвижений.Сортировать("ГрафикРаботы, ДатаС");
	
	ПредыдущаяСтрока = Неопределено;
	
	Для Каждого СтрокаТаблицаНовыхДвижений Из ТаблицаНовыхДвижений Цикл
		Если СтрокаТаблицаНовыхДвижений.ВидДвижения = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПредыдущаяСтрока = Неопределено
			Или ПредыдущаяСтрока.ГрафикРаботы <> СтрокаТаблицаНовыхДвижений.ГрафикРаботы Тогда
			ПредыдущаяСтрока = СтрокаТаблицаНовыхДвижений;
			
			Продолжить;
		КонецЕсли;
		
		Если ПредыдущаяСтрока.ДатаПо + 1 >= СтрокаТаблицаНовыхДвижений.ДатаС Тогда
			ПредыдущаяСтрока.ДатаПо = СтрокаТаблицаНовыхДвижений.ДатаПо;
			
			СтрокаТаблицаНовыхДвижений.ДатаС = Неопределено;
			
			Продолжить;
		КонецЕсли;
		
		ПредыдущаяСтрока = СтрокаТаблицаНовыхДвижений;
	КонецЦикла;
	
	СтрокиДляУдаления = ТаблицаНовыхДвижений.НайтиСтроки(Новый Структура("ДатаС", Дата("00010101")));
	
	Для Каждого СтрокаДляУдаления Из СтрокиДляУдаления Цикл
		ТаблицаНовыхДвижений.Удалить(СтрокаДляУдаления);
	КонецЦикла;
	
	ТаблицаНовыхДвижений.Свернуть("ВидДвижения, ДатаПо, ДатаС, ГрафикРаботы, Баланс_");
КонецПроцедуры




