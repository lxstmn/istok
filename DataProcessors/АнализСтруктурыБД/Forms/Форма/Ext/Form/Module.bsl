
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВывестиСтруктуруБДНаСервере();
КонецПроцедуры



&НаКлиенте
Процедура ВывестиСтруктуруБД(Команда)
	ОчиститьСообщения();
	ИзмененныеЭлементы.Очистить();
	
	ВывестиСтруктуруБДНаСервере();
	
	МасштабФорма = 0;
	МасштабФормаПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ВывестиСтруктуруБДНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьЗапросСтруктураДанных();
	СтрокаОбъектСистемы = Запрос.Выполнить();
	
	Если СтрокаОбъектСистемы.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	
	
	ШиринаКолонки = 300;
	ВысотаКолонки = 20;
	
	ХНачалоОбъектСистемыПредыдущий = 40;
	УКонецОбъектСистемыПредыдущий = 40;
	
	НеобработанныеКолонки = Новый ТаблицаЗначений;
	НеобработанныеКолонки.Колонки.Добавить("ТипОбъекта", Новый ОписаниеТипов("СправочникСсылка.ТипыОбъектов"));
	НеобработанныеКолонки.Колонки.Добавить("ТипОбъектаКод", Новый ОписаниеТипов("Строка"));
	НеобработанныеКолонки.Колонки.Добавить("ОбъектСистемы", Новый ОписаниеТипов("СправочникСсылка.ОбъектыСистемы"));
	НеобработанныеКолонки.Колонки.Добавить("ОбъектСистемыКод", Новый ОписаниеТипов("Строка"));
	НеобработанныеКолонки.Колонки.Добавить("ОбъектСистемыНаименование", Новый ОписаниеТипов("Строка"));
	НеобработанныеКолонки.Колонки.Добавить("ВариантОбъекта", Новый ОписаниеТипов("СправочникСсылка.ВариантыОбъектов"));
	НеобработанныеКолонки.Колонки.Добавить("ВариантОбъектаКод", Новый ОписаниеТипов("Строка"));
	НеобработанныеКолонки.Колонки.Добавить("ВариантОбъектаНаименование", Новый ОписаниеТипов("Строка"));
	НеобработанныеКолонки.Колонки.Добавить("Таблица", Новый ОписаниеТипов("СправочникСсылка.ОбъектыСистемы"));
	НеобработанныеКолонки.Колонки.Добавить("ТаблицаКод", Новый ОписаниеТипов("Строка"));
	НеобработанныеКолонки.Колонки.Добавить("ТаблицаНаименование", Новый ОписаниеТипов("Строка"));
	НеобработанныеКолонки.Колонки.Добавить("Колонка", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.КолонкиОбъектов"));
	НеобработанныеКолонки.Колонки.Добавить("КолонкаКод", Новый ОписаниеТипов("Строка"));
	НеобработанныеКолонки.Колонки.Добавить("КолонкаНаименование", Новый ОписаниеТипов("Строка"));
	НеобработанныеКолонки.Колонки.Добавить("ТипОбъектСистемы", Новый ОписаниеТипов("СправочникСсылка.ОбъектыСистемы"));
	НеобработанныеКолонки.Колонки.Добавить("ТипОбъектСистемыКод", Новый ОписаниеТипов("Строка"));
	НеобработанныеКолонки.Колонки.Добавить("ТипВариантОбъекта", Новый ОписаниеТипов("СправочникСсылка.ВариантыОбъектов"));
	НеобработанныеКолонки.Колонки.Добавить("ТипВариантОбъектаКод", Новый ОписаниеТипов("Строка"));
	
	//Линии = Новый ТаблицаЗначений;
	//Линии.Колонки.Добавить("ИдентификаторКолонка", Новый ОписаниеТипов("Строка"));
	//Линии.Колонки.Добавить("ИдентификаторОбъектСистемыВариантОбъекта", Новый ОписаниеТипов("Строка"));
	//Линии.Колонки.Добавить("ИдентификаторОбъектСистемы", Новый ОписаниеТипов("Строка"));
	//Линии.Колонки.Добавить("Сортировка", Новый ОписаниеТипов("Число"));
	//Линии.Колонки.Добавить("НеВыводить", Новый ОписаниеТипов("Булево"));
	
	ЭлементыГрафическойСхемы = Новый Соответствие;
	
	
	
	Линии.Очистить();
	
	ГрафическаяСхемаБДXDTO = СериализаторXDTO.ЗаписатьXDTO(ГрафическаяСхемаБД);
	ГрафическаяСхемаБДXDTO.item.Очистить();
	
	ПервыйОбъектГС = РаботаСГС.НоваяДекорация(ГрафическаяСхемаБДXDTO, "ПервыйОбъектГС", "", ФигурыГрафическойСхемы.Нет, 0, 0, 20, 20);
	ПервыйОбъектГС.transparent = Истина;
	ГрафическаяСхемаБДXDTO.item.Добавить(ПервыйОбъектГС);

	СтрокаОбъектСистемы = СтрокаОбъектСистемы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока СтрокаОбъектСистемы.Следующий() Цикл
		ТипыОбъектСистемы = Новый Соответствие;
		ЭлементыГрафическойСхемыСдвиг = Новый Массив;
		
		ИдентификаторОбъектСистемы = СтрокаОбъектСистемы.ТипОбъектаКод + СтрокаОбъектСистемы.ОбъектСистемыКод;
		
		ХНачалоОбъектСистемы = ХНачалоОбъектСистемыПредыдущий + 4 * ВысотаКолонки;
		УНачалоОбъектСистемы = УКонецОбъектСистемыПредыдущий + 2 * ВысотаКолонки;
		
		ЗаголовокОбъектСистемы = РаботаСГС.НоваяДекорация(ГрафическаяСхемаБДXDTO, "З_" + ИдентификаторОбъектСистемы, " " + СтрокаОбъектСистемы.ОбъектСистемыНаименование, ФигурыГрафическойСхемы.Нет, ХНачалоОбъектСистемы, УНачалоОбъектСистемы - ВысотаКолонки, ШиринаКолонки + 2 * ВысотаКолонки, ВысотаКолонки);
		ЗаголовокОбъектСистемы.alignHor = ГоризонтальноеПоложение.Лево;
		ЗаголовокОбъектСистемы.transparent = Истина;
		ЗаголовокОбъектСистемы.zOrder = 100;
		
		///// переделать
		picture = СериализаторXDTO.Фабрика.Создать(СериализаторXDTO.Фабрика.Тип("http://v8.1c.ru/8.1/data/ui", "Picture"));
		
		Если ТипЗнч(СтрокаОбъектСистемы.ОбъектСистемы) = Тип("СправочникСсылка.ОбъектыСистемы") Тогда
			Если СтрокаОбъектСистемы.ОбъектСистемы.ТипОбъекта = Справочники.ТипыОбъектов.Справочник Тогда
				picture.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui" , "Catalog");
			ИначеЕсли СтрокаОбъектСистемы.ОбъектСистемы.ТипОбъекта = Справочники.ТипыОбъектов.Документ Тогда
				picture.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui" , "CheckSyntax"); //Document
			КонецЕсли;
		ИначеЕсли ТипЗнч(СтрокаОбъектСистемы.ОбъектСистемы) = Тип("СправочникСсылка.РазрезыДанных") Тогда
			Если Метаданные.РегистрыНакопления.Найти(СтрокаОбъектСистемы.ОбъектСистемы.ИмяРегистра) = Неопределено Тогда
				picture.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui" , "InformationRegister");
			Иначе
				picture.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui" , "AccumulationRegister");
			КонецЕсли;
		КонецЕсли;
		
		ЗаголовокОбъектСистемы.picture = picture;
		/////
		
		ГрафическаяСхемаБДXDTO.item.Добавить(ЗаголовокОбъектСистемы);
		ЭлементыГрафическойСхемыСдвиг.Добавить(ЗаголовокОбъектСистемы);
		
		ОбъектСистемы = РаботаСГС.НоваяДекорация(ГрафическаяСхемаБДXDTO, ИдентификаторОбъектСистемы, "", ФигурыГрафическойСхемы.Нет, ХНачалоОбъектСистемы, УНачалоОбъектСистемы, ШиринаКолонки, ВысотаКолонки);
		ОбъектСистемы.zOrder = 0;
		
		Если ПустаяСтрока(СтрокаОбъектСистемы.ОбъектСистемы.ЦветXML) Тогда
			ОбъектСистемы.backColor = Новый Цвет(234, 234, 234);
		Иначе
			ОбъектСистемы.backColor = СериализаторXDTO.XMLЗначение(Тип("Цвет"), СтрокаОбъектСистемы.ОбъектСистемы.ЦветXML);
		КонецЕсли;
		
		ГрафическаяСхемаБДXDTO.item.Добавить(ОбъектСистемы);
		
		НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных = ОбъектыСистемыВариантыОбъектовРазрезыДанных.Добавить();
		НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных.Идентификатор = "З_" + ИдентификаторОбъектСистемы;
		НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных.ОбъектСистемыВариантОбъектаРазрезДанных = СтрокаОбъектСистемы.ОбъектСистемы;
		
		//НоваяСтрокаЛинии = Линии.Добавить();
		//НоваяСтрокаЛинии.ИдентификаторКолонка = ИдентификаторОбъектСистемы;
		//НоваяСтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъекта = ИдентификаторОбъектСистемы;
		//НоваяСтрокаЛинии.НеВыводить = Истина;
		
		//
		
		ХКонецВариантОбъектаПредыдущее = ХНачалоОбъектСистемы;
		УКонецВариантОбъектаПредыдущее = УНачалоОбъектСистемы;
		
		СтрокаВариантОбъекта = СтрокаОбъектСистемы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		Пока СтрокаВариантОбъекта.Следующий() Цикл
			ИдентификаторВариантОбъекта = ИдентификаторОбъектСистемы + СтрокаВариантОбъекта.ВариантОбъектаКод;
			
			Если СтрокаВариантОбъекта.ВариантОбъекта.Пустая() Тогда
				ХНачалоВариантОбъекта = ХКонецВариантОбъектаПредыдущее;
				УНачалоВариантОбъекта = УКонецВариантОбъектаПредыдущее;
				
				ХНачалоТаблицаПредыдущая = ХНачалоВариантОбъекта + ВысотаКолонки;
				УНачалоТаблицаПредыдущая = УНачалоВариантОбъекта + ВысотаКолонки;
			Иначе
				ХНачалоВариантОбъекта = ХКонецВариантОбъектаПредыдущее + ВысотаКолонки;
				УНачалоВариантОбъекта = УКонецВариантОбъектаПредыдущее + 1.5 * ВысотаКолонки;
				
				ХНачалоТаблицаПредыдущая = ХНачалоВариантОбъекта + ВысотаКолонки / 2;
				УНачалоТаблицаПредыдущая = УНачалоВариантОбъекта + ВысотаКолонки / 2;
				
				ЗаголовокВариантОбъекта = РаботаСГС.НоваяДекорация(ГрафическаяСхемаБДXDTO, "З_" + ИдентификаторВариантОбъекта, СтрокаВариантОбъекта.ВариантОбъектаНаименование, ФигурыГрафическойСхемы.Нет, ХНачалоВариантОбъекта, УНачалоВариантОбъекта - ВысотаКолонки, ШиринаКолонки + ВысотаКолонки, ВысотаКолонки);
				ЗаголовокВариантОбъекта.alignHor = ГоризонтальноеПоложение.Лево;
				ЗаголовокВариантОбъекта.transparent = Истина;
				ЗаголовокВариантОбъекта.zOrder = 100;
				
				pictureКолонки = СериализаторXDTO.Фабрика.Создать(СериализаторXDTO.Фабрика.Тип("http://v8.1c.ru/8.1/data/ui", "Picture"));
				pictureКолонки.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui" , "Parameters");
				ЗаголовокВариантОбъекта.picture = pictureКолонки;
					
				ГрафическаяСхемаБДXDTO.item.Добавить(ЗаголовокВариантОбъекта);
				ЭлементыГрафическойСхемыСдвиг.Добавить(ЗаголовокВариантОбъекта);
				
				ВариантОбъекта = РаботаСГС.НоваяДекорация(ГрафическаяСхемаБДXDTO, ИдентификаторВариантОбъекта, "", ФигурыГрафическойСхемы.Блок, ХНачалоВариантОбъекта, УНачалоВариантОбъекта, ШиринаКолонки, ВысотаКолонки);
				ВариантОбъекта.lineColor = Новый Цвет(255, 255, 255);
				ВариантОбъекта.transparent = Истина;
				ВариантОбъекта.zOrder = 10;
				ГрафическаяСхемаБДXDTO.item.Добавить(ВариантОбъекта);
				
				НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных = ОбъектыСистемыВариантыОбъектовРазрезыДанных.Добавить();
				НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных.Идентификатор = "З_" + ИдентификаторВариантОбъекта;
				НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных.ОбъектСистемыВариантОбъектаРазрезДанных = СтрокаВариантОбъекта.ВариантОбъекта;
				
				//НоваяСтрокаЛинии = Линии.Добавить();
				//НоваяСтрокаЛинии.ИдентификаторКолонка = ИдентификаторВариантОбъекта;
				//НоваяСтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъекта = ИдентификаторВариантОбъекта;
				//НоваяСтрокаЛинии.НеВыводить = Истина;
			КонецЕсли;
			
			//
			
			СтрокаТаблица = СтрокаВариантОбъекта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			
			Пока СтрокаТаблица.Следующий() Цикл
				ИдентификаторТаблица = ИдентификаторВариантОбъекта + СтрокаТаблица.ТаблицаКод;
				
				ХНачалоТаблица = ХНачалоТаблицаПредыдущая;
				УНачалоТаблица = УНачалоТаблицаПредыдущая;
				
				Если СтрокаТаблица.ОбъектСистемы <> СтрокаТаблица.Таблица Тогда
					ЗаголовокТаблица = РаботаСГС.НоваяДекорация(ГрафическаяСхемаБДXDTO, "З_" + ИдентификаторТаблица, СтрокаТаблица.ТаблицаНаименование, ФигурыГрафическойСхемы.Нет, ХНачалоТаблица, УНачалоТаблица - ВысотаКолонки, ШиринаКолонки, ВысотаКолонки);
					ЗаголовокТаблица.alignHor = ГоризонтальноеПоложение.Лево;
					ЗаголовокТаблица.transparent = Истина;
					ЗаголовокТаблица.zOrder = 100;
					
					Если Не СтрокаТаблица.СохранятьТаблицу
						Или Не СтрокаТаблица.ВводТаблицы Тогда
						textFont = СериализаторXDTO.Фабрика.Создать(СериализаторXDTO.Фабрика.Тип("http://v8.1c.ru/8.1/data/ui", "Font"));
						
						Если Не СтрокаТаблица.СохранятьТаблицу Тогда
							textFont.underline = Истина;
						КонецЕсли;
						
						Если Не СтрокаТаблица.ВводТаблицы Тогда
							textFont.bold = Истина;
						КонецЕсли;
						
						textFont.kind = ВидШрифта.WindowsШрифт;
						textFont.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui/fonts/system" , "DefaultGUIFont");
						//textFont.scale = 40;
						ЗаголовокТаблица.textFont = textFont;
					КонецЕсли;
					
					pictureКолонки = СериализаторXDTO.Фабрика.Создать(СериализаторXDTO.Фабрика.Тип("http://v8.1c.ru/8.1/data/ui", "Picture"));
					pictureКолонки.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui" , "NestedTable");
					ЗаголовокТаблица.picture = pictureКолонки;
					
					ГрафическаяСхемаБДXDTO.item.Добавить(ЗаголовокТаблица);
					ЭлементыГрафическойСхемыСдвиг.Добавить(ЗаголовокТаблица);
					
					НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных = ОбъектыСистемыВариантыОбъектовРазрезыДанных.Добавить();
					НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных.Идентификатор = "З_" + ИдентификаторТаблица;
					НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных.ОбъектСистемыВариантОбъектаРазрезДанных = СтрокаТаблица.Таблица;
				КонецЕсли;
				
				//
				
				ХНачалоКолонкаПредыдущий = ХНачалоТаблица;
				УКонецКолонкаПредыдущий = УНачалоТаблица;
				
				КоличествоКолонокРазрезаДанных = 0;
				СчитатьКоличествоКолонок = ТипЗнч(СтрокаТаблица.Таблица) = Тип("СправочникСсылка.РазрезыДанных");
				
				СтрокаКолонка = СтрокаТаблица.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
				
				Пока СтрокаКолонка.Следующий() Цикл
					Если СчитатьКоличествоКолонок Тогда
						КоличествоКолонокРазрезаДанных = КоличествоКолонокРазрезаДанных + 1;
					КонецЕсли;
					
					ИдентификаторКолонка = ИдентификаторТаблица + СтрокаКолонка.КолонкаКод;
					
					ХНачалоКолонка = ХНачалоКолонкаПредыдущий;
					ХКонецКолонка = ХНачалоКолонка + ШиринаКолонки;
					УНачалоКолонка = УКонецКолонкаПредыдущий;
					УКонецКолонка = УНачалоКолонка + ВысотаКолонки;
					УКонецКолонкаПредыдущий = УКонецКолонка;
					
					РезультатыПоискаПримитивныхТипов = СтрНайтиВсеПоРегулярномуВыражению(Строка(СтрокаКолонка.Колонка.ТипЗначения), "Булево|Строка|Дата|Число");
					КоличествоРезультатыПоискаПримитивныхТипов = РезультатыПоискаПримитивныхТипов.ВГраница();
					
					ПримитивныеТипыСтрока = "";
					
					Для Каждого РезультатПоиска Из РезультатыПоискаПримитивныхТипов Цикл
						Если КоличествоРезультатыПоискаПримитивныхТипов = 0 Тогда
							ПримитивныеТипыСтрока = " : " + ПримитивныеТипыСтрока;
							Добавка = "";
						Иначе
							Добавка = ",";
						КонецЕсли;
						
						ПримитивныеТипыСтрока = ПримитивныеТипыСтрока + Лев(РезультатПоиска.Значение, 1) + Добавка;
						
						КоличествоРезультатыПоискаПримитивныхТипов = КоличествоРезультатыПоискаПримитивныхТипов - 1;
					КонецЦикла;
					
					Колонка = РаботаСГС.НоваяДекорация(ГрафическаяСхемаБДXDTO, ИдентификаторКолонка, СтрШаблон("%1%2", СтрокаКолонка.КолонкаНаименование, НРег(ПримитивныеТипыСтрока)), ФигурыГрафическойСхемы.Нет, ХНачалоКолонка, УНачалоКолонка, ШиринаКолонки, ВысотаКолонки - 1);
					Колонка.alignHor = ГоризонтальноеПоложение.Лево;
					Колонка.backColor = Новый Цвет(204, 204, 204);
					Колонка.zOrder = 10;
					
					pictureКолонки = СериализаторXDTO.Фабрика.Создать(СериализаторXDTO.Фабрика.Тип("http://v8.1c.ru/8.1/data/ui", "Picture"));
					
					//Если СтрокаКолонка.Колонка = ПланыВидовХарактеристик.КолонкиОбъектов.Номер Тогда
					//	pictureКолонки.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui" , СтрокаКолонка.ИмяКартинкиКолонки);
					//ИначеЕсли СтрокаКолонка.Колонка = ПланыВидовХарактеристик.КолонкиОбъектов.Наименование Тогда
					//	pictureКолонки.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui" , СтрокаКолонка.ИмяКартинкиКолонки);
					//ИначеЕсли СтрокаКолонка.Колонка = ПланыВидовХарактеристик.КолонкиОбъектов.Автор Тогда
					//	pictureКолонки.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui" , СтрокаКолонка.ИмяКартинкиКолонки);
					//ИначеЕсли СтрокаКолонка.Колонка = ПланыВидовХарактеристик.КолонкиОбъектов.Номер Тогда
					//	pictureКолонки.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui" , СтрокаКолонка.ИмяКартинкиКолонки);
					//Иначе
						pictureКолонки.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui" , СтрокаКолонка.ИмяКартинкиКолонки);
					//КонецЕсли;
					
					Колонка.picture = pictureКолонки;
					
					Если Не СтрокаКолонка.СохранятьТаблицу
						Или Не СтрокаКолонка.ВводТаблицы
						Или Не СтрокаКолонка.СохранятьКолонку
						Или Не СтрокаКолонка.ВводКолонки Тогда
						textFont = СериализаторXDTO.Фабрика.Создать(СериализаторXDTO.Фабрика.Тип("http://v8.1c.ru/8.1/data/ui", "Font"));
						
						Если Не СтрокаКолонка.СохранятьТаблицу
							Или Не СтрокаКолонка.СохранятьКолонку Тогда
							textFont.underline = Истина;
						КонецЕсли;
						
						Если Не СтрокаКолонка.ВводТаблицы
							Или Не СтрокаКолонка.ВводКолонки Тогда
							textFont.bold = Истина;
						КонецЕсли;
						
						textFont.kind = ВидШрифта.WindowsШрифт;
						textFont.ref = Новый РасширенноеИмяXML("http://v8.1c.ru/8.1/data/ui/fonts/system" , "DefaultGUIFont");
						//textFont.scale = 40;
						Колонка.textFont = textFont;
					КонецЕсли;
					
					ГрафическаяСхемаБДXDTO.item.Добавить(Колонка);
					ЭлементыГрафическойСхемы.Вставить(ИдентификаторКолонка, Колонка);
					ЭлементыГрафическойСхемыСдвиг.Добавить(Колонка);
					
					НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных = ОбъектыСистемыВариантыОбъектовРазрезыДанных.Добавить();
					НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных.Идентификатор = ИдентификаторКолонка;
					НоваяСтрокаОбъектыСистемыВариантыОбъектовРазрезыДанных.ОбъектСистемыВариантОбъектаРазрезДанных = СтрокаКолонка.Колонка;
					
					СтрокаТипОбъектСистемы = СтрокаКолонка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
					
					Пока СтрокаТипОбъектСистемы.Следующий() Цикл
						Если СтрокаТипОбъектСистемы.ТипВариантОбъекта = 0 Тогда
							Продолжить;
						Иначе
							ИдентификаторТипОбъектСистемы = СтрокаТипОбъектСистемы.ТипТипОбъектаКод + СтрокаТипОбъектСистемы.ТипОбъектСистемыКод;
							
							Если СтрокаТипОбъектСистемы.КоличествоВариантовОбъектов <> 0
								И СтрокаТипОбъектСистемы.КоличествоВариантовОбъектов = СтрокаТипОбъектСистемы.ТипВариантОбъекта Тогда
								Если ЭлементыГрафическойСхемы.Получить(ИдентификаторТипОбъектСистемы) = Неопределено Тогда
									ТипыОбъектСистемы.Вставить(ИдентификаторТипОбъектСистемы, Истина);
								КонецЕсли;
								
								НоваяСтрокаЛинии = Линии.Добавить();
								НоваяСтрокаЛинии.ИдентификаторКолонка = ИдентификаторКолонка;
								НоваяСтрокаЛинии.ИдентификаторОбъектСистемы = ИдентификаторОбъектСистемы;
								НоваяСтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъекта = ИдентификаторТипОбъектСистемы;
								НоваяСтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъектаКонец = ИдентификаторВариантОбъекта;
								//НоваяСтрокаЛинии.ИдентификаторОбъектСистемыКонец = СтрокаРазрезДанных.РазрезДанныхТипОбъектаКод + СтрокаРазрезДанных.РазрезДанныхКод;
								
								Если СтрокаТипОбъектСистемы.ОбъектСистемы = СтрокаТипОбъектСистемы.ТипОбъектСистемы Тогда
									НоваяСтрокаЛинии.Сортировка = 2;
								Иначе
									НоваяСтрокаЛинии.Сортировка = 1000000 - Линии.Количество();
								КонецЕсли;
							Иначе
								СтрокаТипВариантОбъекта = СтрокаТипОбъектСистемы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
								
								Пока СтрокаТипВариантОбъекта.Следующий() Цикл
									ИдентификаторТипОбъектСистемыТипВариантОбъекта = ИдентификаторТипОбъектСистемы + СтрокаТипВариантОбъекта.ТипВариантОбъектаКод;
									
									Если ЭлементыГрафическойСхемы.Получить(ИдентификаторТипОбъектСистемыТипВариантОбъекта) = Неопределено Тогда
										ТипыОбъектСистемы.Вставить(ИдентификаторТипОбъектСистемыТипВариантОбъекта, Истина);
									КонецЕсли;
									
									НоваяСтрокаЛинии = Линии.Добавить();
									НоваяСтрокаЛинии.ИдентификаторКолонка = ИдентификаторКолонка;
									НоваяСтрокаЛинии.ИдентификаторОбъектСистемы = ИдентификаторОбъектСистемы;
									НоваяСтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъекта = ИдентификаторТипОбъектСистемыТипВариантОбъекта;
									НоваяСтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъектаКонец = ИдентификаторВариантОбъекта;
									НоваяСтрокаЛинии.ИдентификаторОбъектСистемыКонец = ИдентификаторТипОбъектСистемы;
									
									Если СтрокаТипВариантОбъекта.ОбъектСистемы = СтрокаТипВариантОбъекта.ТипОбъектСистемы Тогда
										Если СтрокаТипВариантОбъекта.ВариантОбъекта = СтрокаТипВариантОбъекта.ТипВариантОбъекта Тогда
											НоваяСтрокаЛинии.Сортировка = 1;
										Иначе
											НоваяСтрокаЛинии.Сортировка = 2;
										КонецЕсли;
									Иначе
										НоваяСтрокаЛинии.Сортировка = 1000000 - Линии.Количество();
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				
				ХКонецТаблица = ХКонецКолонка;
				УКонецТаблица = УКонецКолонка;
				
				ХНачалоТаблицаПредыдущая = ХНачалоТаблица;
				УНачалоТаблицаПредыдущая = УКонецТаблица + 1.5 * ВысотаКолонки;
			КонецЦикла;
			
			Если СтрокаВариантОбъекта.ВариантОбъекта.Пустая() Тогда
				ХКонецВариантОбъекта = ХКонецТаблица;
				УКонецВариантОбъекта = УКонецТаблица;
			Иначе
				ХКонецВариантОбъекта = ХКонецТаблица + ВысотаКолонки / 2;
				УКонецВариантОбъекта = УКонецТаблица + ВысотаКолонки / 2;
				
				ВариантОбъекта.rectRight = ХКонецВариантОбъекта;
				ВариантОбъекта.rectBottom = УКонецВариантОбъекта;
				
				ЭлементыГрафическойСхемыСдвиг.Добавить(ВариантОбъекта);
				ЭлементыГрафическойСхемы.Вставить(ИдентификаторВариантОбъекта, ВариантОбъекта);
			КонецЕсли;
			
			ХКонецВариантОбъектаПредыдущее = ХНачалоВариантОбъекта;
			УКонецВариантОбъектаПредыдущее = УКонецВариантОбъекта;
		КонецЦикла;
		
		ХКонецОбъектСистемы = ХКонецВариантОбъекта + ВысотаКолонки;
		УКонецОбъектСистемы = УКонецВариантОбъекта + ВысотаКолонки;
		
		ОбъектСистемы.rectRight = ХКонецОбъектСистемы;
		ОбъектСистемы.rectBottom = УКонецОбъектСистемы;
		
		ЭлементыГрафическойСхемыСдвиг.Добавить(ОбъектСистемы);
		ЭлементыГрафическойСхемы.Вставить(ИдентификаторОбъектСистемы, ОбъектСистемы);
		
		Сдвиг = ТипыОбъектСистемы.Количество() * ВысотаКолонки;
		
		ХНачалоОбъектСистемыПредыдущий = ХНачалоВариантОбъекта + Сдвиг + ?(КоличествоКолонокРазрезаДанных = 0, КоличествоКолонокРазрезаДанных, КоличествоКолонокРазрезаДанных - 1) * ВысотаКолонки;
		УКонецОбъектСистемыПредыдущий = УКонецОбъектСистемы;
		
		Если Сдвиг <> 0 Тогда
			Для Каждого ДобавленныйЭлементГС Из ЭлементыГрафическойСхемыСдвиг Цикл
				ДобавленныйЭлементГС.rectLeft = ДобавленныйЭлементГС.rectLeft + Сдвиг;
				ДобавленныйЭлементГС.rectRight = ДобавленныйЭлементГС.rectRight + Сдвиг;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ПоследнийОбъектГС = РаботаСГС.НоваяДекорация(ГрафическаяСхемаБДXDTO, "ПоследнийОбъектГС", "", ФигурыГрафическойСхемы.Нет, ХКонецОбъектСистемы + (КоличествоКолонокРазрезаДанных + 3) * ВысотаКолонки, УКонецОбъектСистемы + 3 * ВысотаКолонки, 20, 20);
	ПоследнийОбъектГС.transparent = Истина;
	ГрафическаяСхемаБДXDTO.item.Добавить(ПоследнийОбъектГС);
	
	Линии.Сортировать("Сортировка");
	
	ИнформацияПоНомерамЛиний = Новый Соответствие;
	
	Для Каждого СтрокаЛинии Из Линии Цикл
		//Если СтрокаЛинии.НеВыводить Тогда
		//	Продолжить;
		//КонецЕсли;
		
		Колонка = ЭлементыГрафическойСхемы.Получить(СтрокаЛинии.ИдентификаторКолонка);
		ОбъектСистемы = ЭлементыГрафическойСхемы.Получить(СтрокаЛинии.ИдентификаторОбъектСистемы);
		ОбъектСистемыВариантОбъекта = ЭлементыГрафическойСхемы.Получить(СтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъекта);
		
		Если ОбъектСистемыВариантОбъекта = Неопределено Тогда
			Сообщить("Линия не построена");
			
			Продолжить;
		КонецЕсли;
		
		СтрокаЛинии.ИдентификаторЛинии = Строка(Новый УникальныйИдентификатор);
		
		Если СтрокаЛинии.Сортировка < 3
			Или Колонка.rectBottom < ОбъектСистемыВариантОбъекта.rectBottom Тогда
			НомерЛинии = ПолучитьНомерЛинии(ИнформацияПоНомерамЛиний, СтрокаЛинии);
			
			Координаты = Новый Массив;
			Координаты.Добавить(ОбъектСистемыВариантОбъекта.rectLeft);
			Координаты.Добавить(ОбъектСистемыВариантОбъекта.rectTop);
			Координаты.Добавить(ОбъектСистемы.rectLeft - НомерЛинии * ВысотаКолонки);
			Координаты.Добавить(ОбъектСистемыВариантОбъекта.rectTop);
			Координаты.Добавить(ОбъектСистемы.rectLeft - НомерЛинии * ВысотаКолонки);
			Координаты.Добавить(Колонка.rectTop + ВысотаКолонки / 2);
			Координаты.Добавить(Колонка.rectLeft);
			Координаты.Добавить(Колонка.rectTop + ВысотаКолонки / 2);
			
			Сортировка = ОбъектСистемы.rectLeft - НомерЛинии * ВысотаКолонки;
		Иначе
			Координаты = Новый Массив;
			Координаты.Добавить(ОбъектСистемыВариантОбъекта.rectLeft);
			Координаты.Добавить(ОбъектСистемыВариантОбъекта.rectBottom);
			Координаты.Добавить(ОбъектСистемыВариантОбъекта.rectLeft);
			Координаты.Добавить(Колонка.rectTop + ВысотаКолонки / 2);
			Координаты.Добавить(Колонка.rectLeft);
			Координаты.Добавить(Колонка.rectTop + ВысотаКолонки / 2);
			
			Сортировка = ОбъектСистемыВариантОбъекта.rectLeft;
		КонецЕсли;
		
		НоваяЛиния = РаботаСГС.НоваяДекоративнаяЛиния(ГрафическаяСхемаБДXDTO, СтрокаЛинии.ИдентификаторЛинии, Координаты);
		НоваяЛиния.lineColor = Новый Цвет(153, 153, 153);
		НоваяЛиния.zOrder = 1000000 - Сортировка;
		ГрафическаяСхемаБДXDTO.item.Добавить(НоваяЛиния);
	КонецЦикла;
	
	//
	
	//РанееДобавленные = Новый Соответствие;
	
	Запрос.Текст = ПолучитьЗапросПроводки();
	СтрокаРазрезДанных = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока СтрокаРазрезДанных.Следующий() Цикл
		Счетчик = 1;
		
		ИдентификаторРазрезДанных = СтрокаРазрезДанных.РазрезДанныхТипОбъектаКод + СтрокаРазрезДанных.РазрезДанныхКод + СтрокаРазрезДанных.РазрезДанныхТаблицаКод;
		
		СтрокаКолонкаРазрезаДанных = СтрокаРазрезДанных.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		Пока СтрокаКолонкаРазрезаДанных.Следующий() Цикл
			ИдентификаторКолонкаРазрезаДанных = ИдентификаторРазрезДанных + СтрокаКолонкаРазрезаДанных.КолонкаРазрезаДанныхКод;
			
			КолонкаРазрезаДанных = ЭлементыГрафическойСхемы.Получить(ИдентификаторКолонкаРазрезаДанных);
			
			СтрокаКолонка = СтрокаКолонкаРазрезаДанных.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			
			Пока СтрокаКолонка.Следующий() Цикл
				Если СтрокаКолонка.Колонка = ПланыВидовХарактеристик.КолонкиОбъектов.Ссылка Тогда
					ИдентификаторКолонка = СтрокаКолонка.ТипОбъектаКод + СтрокаКолонка.ОбъектСистемыКод + СтрокаКолонка.ВариантОбъектаКод;
					
					Коэффициент = 0;
				Иначе
					ИдентификаторКолонка = СтрокаКолонка.ТипОбъектаКод + СтрокаКолонка.ОбъектСистемыКод + СтрокаКолонка.ВариантОбъектаКод + СтрокаКолонка.ТаблицаКод + СтрокаКолонка.КолонкаКод;
					
					Коэффициент = 1;
				КонецЕсли;
				
				Колонка = ЭлементыГрафическойСхемы.Получить(ИдентификаторКолонка);
				
				Если КолонкаРазрезаДанных = Неопределено
					Или Колонка = Неопределено Тогда
					Сообщить(СтрШаблон("Ошибка настройки проводки: ОС: %1 С: %2 Т: %3 Р: %4   =>   РД: %5 К: %6",
					СтрокаКолонка.ОбъектСистемы,
					СтрокаКолонка.ВариантОбъекта,
					СтрокаКолонка.Таблица,
					СтрокаКолонка.Колонка,
					СтрокаКолонка.РазрезДанных,
					СтрокаКолонка.КолонкаРазрезаДанных));
					
					Продолжить;
				КонецЕсли;
				
				ИдентификаторЛинии = Строка(Новый УникальныйИдентификатор);
				
				Координаты = Новый Массив;
				Координаты.Добавить(КолонкаРазрезаДанных.rectRight);
				Координаты.Добавить(КолонкаРазрезаДанных.rectTop + ВысотаКолонки / 2);
				Координаты.Добавить(КолонкаРазрезаДанных.rectRight + (Счетчик + 1) * ВысотаКолонки);
				Координаты.Добавить(КолонкаРазрезаДанных.rectTop + ВысотаКолонки / 2);
				Координаты.Добавить(КолонкаРазрезаДанных.rectRight + (Счетчик + 1) * ВысотаКолонки); 
				Координаты.Добавить(Колонка.rectTop + Коэффициент * ВысотаКолонки / 2);
				Координаты.Добавить(Колонка.rectRight);
				Координаты.Добавить(Колонка.rectTop + Коэффициент * ВысотаКолонки / 2);
				
				НоваяЛиния = РаботаСГС.НоваяДекоративнаяЛиния(ГрафическаяСхемаБДXDTO, ИдентификаторЛинии, Координаты);
				НоваяЛиния.lineColor = Новый Цвет(153, 153, 153);
				НоваяЛиния.zOrder = КолонкаРазрезаДанных.rectRight + (Счетчик + 1) * ВысотаКолонки;
				ГрафическаяСхемаБДXDTO.item.Добавить(НоваяЛиния);
				
				НоваяСтрокаЛинии = Линии.Добавить();
				НоваяСтрокаЛинии.ИдентификаторКолонка = ИдентификаторКолонкаРазрезаДанных;
				НоваяСтрокаЛинии.ИдентификаторОбъектСистемы = СтрокаКолонка.ТипОбъектаКод + СтрокаКолонка.ОбъектСистемыКод;
				НоваяСтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъекта = ИдентификаторКолонка;
				НоваяСтрокаЛинии.ИдентификаторЛинии = ИдентификаторЛинии;
				НоваяСтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъектаКонец = СтрокаКолонка.ТипОбъектаКод + СтрокаКолонка.ОбъектСистемыКод + СтрокаКолонка.ВариантОбъектаКод;
				НоваяСтрокаЛинии.ИдентификаторОбъектСистемыКонец = СтрокаРазрезДанных.РазрезДанныхТипОбъектаКод + СтрокаРазрезДанных.РазрезДанныхКод;
				
				//МассивЛиний = Линии.НайтиСтроки(Новый Структура("ИдентификаторКолонка", ИдентификаторКолонка));
				//
				//Для Каждого Линия Из МассивЛиний Цикл
				//	ОбъектСистемыВариантОбъекта = ЭлементыГрафическойСхемы.Получить(Линия.ИдентификаторОбъектСистемыВариантОбъекта);
				//	
				//	Если ОбъектСистемыВариантОбъекта = Неопределено Тогда
				//		Продолжить;
				//	КонецЕсли;
				//	
				//	Если РанееДобавленные.Получить(Линия.ИдентификаторОбъектСистемыВариантОбъекта + ИдентификаторКолонкаРазрезаДанных) = Неопределено Тогда
				//		РанееДобавленные.Вставить(Линия.ИдентификаторОбъектСистемыВариантОбъекта + ИдентификаторКолонкаРазрезаДанных, Истина);
				//	Иначе
				//		Продолжить;
				//	КонецЕсли;
				//	
				//	ИдентификаторЛинии = Строка(Новый УникальныйИдентификатор);
				//	
				//	Координаты = Новый Массив;
				//	Координаты.Добавить(ОбъектСистемыВариантОбъекта.rectLeft);
				//	Координаты.Добавить(ОбъектСистемыВариантОбъекта.rectBottom);
				//	Координаты.Добавить(ОбъектСистемыВариантОбъекта.rectLeft);
				//	Координаты.Добавить(КолонкаРазрезаДанных.rectTop + ВысотаКолонки / 2);
				//	Координаты.Добавить(КолонкаРазрезаДанных.rectLeft);
				//	Координаты.Добавить(КолонкаРазрезаДанных.rectTop + ВысотаКолонки / 2);
				//	
				//	НоваяЛиния = РаботаСГС.НоваяДекоративнаяЛиния(ГрафическаяСхемаБДXDTO, ИдентификаторЛинии, Координаты);
				//	НоваяЛиния.lineColor = Новый Цвет(153, 153, 153);
				//	НоваяЛиния.zOrder = 1000000 - ОбъектСистемыВариантОбъекта.rectLeft;
				//	ГрафическаяСхемаБДXDTO.item.Добавить(НоваяЛиния);
				//	
				//	НоваяСтрокаЛинии = Линии.Добавить();
				//	НоваяСтрокаЛинии.ИдентификаторКолонка = ИдентификаторКолонкаРазрезаДанных;
				//	НоваяСтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъекта = Линия.ИдентификаторОбъектСистемыВариантОбъекта;
				//	НоваяСтрокаЛинии.ИдентификаторЛинии = ИдентификаторЛинии;
				//КонецЦикла;
			КонецЦикла;
			
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЦикла;
	
	ГрафическаяСхемаБД = СериализаторXDTO.ПрочитатьXDTO(ГрафическаяСхемаБДXDTO);
КонецПроцедуры



&НаСервере
Функция ПолучитьЗапросСтруктураДанных()
	Возврат
	
	"ВЫБРАТЬ
	|	ОбъектыСистемы.Ссылка КАК ОбъектСистемы,
	|	ЕСТЬNULL(ВариантыОбъектов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)) КАК ВариантОбъекта,
	|	ОбъектыСистемы.Ссылка КАК Таблица
	|ПОМЕСТИТЬ ВТ_ОбъектыСистемы
	|ИЗ
	|	Справочник.ОбъектыСистемы КАК ОбъектыСистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОбъектов КАК ВариантыОбъектов
	|		ПО (ОбъектыСистемы.ВестиВариантыОбъектов)
	|			И (НЕ ВариантыОбъектов.ПометкаУдаления)
	|			И ОбъектыСистемы.Ссылка = ВариантыОбъектов.Владелец
	|ГДЕ
	|	НЕ ОбъектыСистемы.ПометкаУдаления
	|	И (ОбъектыСистемы.ТипОбъекта = ЗНАЧЕНИЕ(Справочник.ТипыОбъектов.Справочник)
	|			ИЛИ ОбъектыСистемы.ТипОбъекта = ЗНАЧЕНИЕ(Справочник.ТипыОбъектов.Документ)
	|			ИЛИ ОбъектыСистемы.ТипОбъекта = ЗНАЧЕНИЕ(Справочник.ТипыОбъектов.Пакет))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОбъектыСистемыТаблицы.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	ОбъектыСистемыТаблицы.Ссылка КАК ОбъектСистемы,
	|	ЕСТЬNULL(ВариантыОбъектов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)) КАК ВариантОбъекта,
	|	ОбъектыСистемыТаблицы.Таблица КАК Таблица,
	|	ОбъектыСистемыТаблицы.Сохранять КАК СохранятьТаблицу,
	|	ОбъектыСистемыТаблицы.Ввод КАК ВводТаблицы,
	|	ОбъектыСистемыТаблицы.Исключить КАК Исключить
	|ПОМЕСТИТЬ ВТ_ТаблицыТемп
	|ИЗ
	|	Справочник.ОбъектыСистемы.Таблицы КАК ОбъектыСистемыТаблицы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОбъектов КАК ВариантыОбъектов
	|		ПО (ОбъектыСистемыТаблицы.Ссылка.ВестиВариантыОбъектов)
	|			И (НЕ ВариантыОбъектов.ПометкаУдаления)
	|			И ОбъектыСистемыТаблицы.Ссылка = ВариантыОбъектов.Владелец
	|			И (ОбъектыСистемыТаблицы.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|				ИЛИ ОбъектыСистемыТаблицы.ВариантОбъекта = ВариантыОбъектов.Ссылка)
	|ГДЕ
	|	НЕ ОбъектыСистемыТаблицы.Ссылка.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_ТаблицыТемп.Приоритет) КАК Приоритет,
	|	ВТ_ТаблицыТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_ТаблицыТемп.ВариантОбъекта КАК ВариантОбъекта,
	|	ВТ_ТаблицыТемп.Таблица КАК Таблица
	|ПОМЕСТИТЬ ВТ_ТаблицыМакс
	|ИЗ
	|	ВТ_ТаблицыТемп КАК ВТ_ТаблицыТемп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицыТемп.ОбъектСистемы,
	|	ВТ_ТаблицыТемп.ВариантОбъекта,
	|	ВТ_ТаблицыТемп.Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицыТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_ТаблицыТемп.ВариантОбъекта КАК ВариантОбъекта,
	|	ВТ_ТаблицыТемп.Таблица КАК Таблица,
	|	ВТ_ТаблицыТемп.СохранятьТаблицу КАК СохранятьТаблицу,
	|	ВТ_ТаблицыТемп.ВводТаблицы КАК ВводТаблицы
	|ПОМЕСТИТЬ ВТ_Таблицы
	|ИЗ
	|	ВТ_ТаблицыМакс КАК ВТ_ТаблицыМакс
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицыТемп КАК ВТ_ТаблицыТемп
	|		ПО ВТ_ТаблицыМакс.Приоритет = ВТ_ТаблицыТемп.Приоритет
	|			И ВТ_ТаблицыМакс.ОбъектСистемы = ВТ_ТаблицыТемп.ОбъектСистемы
	|			И ВТ_ТаблицыМакс.ВариантОбъекта = ВТ_ТаблицыТемп.ВариантОбъекта
	|			И ВТ_ТаблицыМакс.Таблица = ВТ_ТаблицыТемп.Таблица
	|ГДЕ
	|	НЕ ВТ_ТаблицыТемп.Исключить
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОбъектыСистемыКолонки.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	ОбъектыСистемыКолонки.Ссылка КАК ОбъектСистемы,
	|	ЕСТЬNULL(ВариантыОбъектов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)) КАК ВариантОбъекта,
	|	ОбъектыСистемыКолонки.Колонка КАК Колонка,
	|	ОбъектыСистемыКолонки.Сохранять КАК СохранятьКолонку,
	|	ОбъектыСистемыКолонки.Ввод КАК ВводКолонки,
	|	ОбъектыСистемыКолонки.Исключить КАК Исключить
	|ПОМЕСТИТЬ ВТ_КолонкиТемп
	|ИЗ
	|	Справочник.ОбъектыСистемы.Колонки КАК ОбъектыСистемыКолонки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОбъектов КАК ВариантыОбъектов
	|		ПО (ОбъектыСистемыКолонки.Ссылка.ВестиВариантыОбъектов)
	|			И (НЕ ВариантыОбъектов.ПометкаУдаления)
	|			И ОбъектыСистемыКолонки.Ссылка = ВариантыОбъектов.Владелец
	|			И (ОбъектыСистемыКолонки.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|				ИЛИ ОбъектыСистемыКолонки.ВариантОбъекта = ВариантыОбъектов.Ссылка)
	|ГДЕ
	|	НЕ ОбъектыСистемыКолонки.Ссылка.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_КолонкиТемп.Приоритет) КАК Приоритет,
	|	ВТ_КолонкиТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_КолонкиТемп.ВариантОбъекта КАК ВариантОбъекта,
	|	ВТ_КолонкиТемп.Колонка КАК Колонка
	|ПОМЕСТИТЬ ВТ_КолонкиМакс
	|ИЗ
	|	ВТ_КолонкиТемп КАК ВТ_КолонкиТемп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КолонкиТемп.ОбъектСистемы,
	|	ВТ_КолонкиТемп.ВариантОбъекта,
	|	ВТ_КолонкиТемп.Колонка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КолонкиТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_КолонкиТемп.ВариантОбъекта КАК ВариантОбъекта,
	|	ВТ_КолонкиТемп.Колонка КАК Колонка,
	|	ВТ_КолонкиТемп.СохранятьКолонку КАК СохранятьКолонку,
	|	ВТ_КолонкиТемп.ВводКолонки КАК ВводКолонки
	|ПОМЕСТИТЬ ВТ_Колонки
	|ИЗ
	|	ВТ_КолонкиМакс КАК ВТ_КолонкиМакс
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КолонкиТемп КАК ВТ_КолонкиТемп
	|		ПО ВТ_КолонкиМакс.Приоритет = ВТ_КолонкиТемп.Приоритет
	|			И ВТ_КолонкиМакс.ОбъектСистемы = ВТ_КолонкиТемп.ОбъектСистемы
	|			И ВТ_КолонкиМакс.ВариантОбъекта = ВТ_КолонкиТемп.ВариантОбъекта
	|			И ВТ_КолонкиМакс.Колонка = ВТ_КолонкиТемп.Колонка
	|ГДЕ
	|	НЕ ВТ_КолонкиТемп.Исключить
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОбъектыСистемы.ОбъектСистемы,
	|	ВТ_ОбъектыСистемы.ВариантОбъекта,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Корректировка),
	|	ИСТИНА,
	|	ИСТИНА
	|ИЗ
	|	ВТ_ОбъектыСистемы КАК ВТ_ОбъектыСистемы
	|ГДЕ
	|	ВТ_ОбъектыСистемы.ОбъектСистемы.ВестиКорректировки
	|	И (НЕ ВТ_ОбъектыСистемы.ОбъектСистемы.ВестиВариантыОбъектов
	|			ИЛИ ВТ_ОбъектыСистемы.ВариантОбъекта.ВестиКорректировки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОбъектыСистемы.ОбъектСистемы,
	|	ВТ_ОбъектыСистемы.ВариантОбъекта,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Версия),
	|	ИСТИНА,
	|	ИСТИНА
	|ИЗ
	|	ВТ_ОбъектыСистемы КАК ВТ_ОбъектыСистемы
	|ГДЕ
	|	ВТ_ОбъектыСистемы.ОбъектСистемы.ВестиВерсии
	|	И (НЕ ВТ_ОбъектыСистемы.ОбъектСистемы.ВестиВариантыОбъектов
	|			ИЛИ ВТ_ОбъектыСистемы.ВариантОбъекта.ВестиВерсии)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОбъектыСистемы.ОбъектСистемы,
	|	ВТ_ОбъектыСистемы.ВариантОбъекта,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Дата),
	|	ИСТИНА,
	|	ИСТИНА
	|ИЗ
	|	ВТ_ОбъектыСистемы КАК ВТ_ОбъектыСистемы
	//|ГДЕ
	//|	(ВТ_ОбъектыСистемы.ОбъектСистемы.ТипОбъекта = ЗНАЧЕНИЕ(Справочник.ТипыОбъектов.Документ)
	//|			ИЛИ ВТ_ОбъектыСистемы.ОбъектСистемы.ТипОбъекта = ЗНАЧЕНИЕ(Справочник.ТипыОбъектов.Пакет))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОбъектыСистемы.ОбъектСистемы,
	|	ВТ_ОбъектыСистемы.ВариантОбъекта,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Номер),
	|	ИСТИНА,
	|	ИСТИНА
	|ИЗ
	|	ВТ_ОбъектыСистемы КАК ВТ_ОбъектыСистемы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОбъектыСистемы.ОбъектСистемы,
	|	ВТ_ОбъектыСистемы.ВариантОбъекта,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Наименование),
	|	ИСТИНА,
	|	ИСТИНА
	|ИЗ
	|	ВТ_ОбъектыСистемы КАК ВТ_ОбъектыСистемы
	|ГДЕ
	|	ВТ_ОбъектыСистемы.ОбъектСистемы.ТипОбъекта = ЗНАЧЕНИЕ(Справочник.ТипыОбъектов.Справочник)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОбъектыСистемы.ОбъектСистемы,
	|	ВТ_ОбъектыСистемы.ВариантОбъекта,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Автор),
	|	ИСТИНА,
	|	ИСТИНА
	|ИЗ
	|	ВТ_ОбъектыСистемы КАК ВТ_ОбъектыСистемы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Таблицы.Таблица,
	|	ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.СтрокаТаблицы),
	|	ИСТИНА,
	|	ИСТИНА
	|ИЗ
	|	ВТ_Таблицы КАК ВТ_Таблицы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КолонкиОбъектовДоступныеОбъектыСистемы.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	КолонкиОбъектовДоступныеОбъектыСистемы.Ссылка КАК Колонка,
	|	КолонкиОбъектовДоступныеОбъектыСистемы.ОбъектСистемы КАК ТипОбъектСистемы,
	|	ЕСТЬNULL(ВариантыОбъектов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)) КАК ТипВариантОбъекта,
	|	КолонкиОбъектовДоступныеОбъектыСистемы.Исключить КАК Исключить
	|ПОМЕСТИТЬ ВТ_ТипыТемп
	|ИЗ
	|	ПланВидовХарактеристик.КолонкиОбъектов.ДоступныеОбъектыСистемы КАК КолонкиОбъектовДоступныеОбъектыСистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОбъектов КАК ВариантыОбъектов
	|		ПО (КолонкиОбъектовДоступныеОбъектыСистемы.ОбъектСистемы.ВестиВариантыОбъектов)
	|			И (НЕ ВариантыОбъектов.ПометкаУдаления)
	|			И КолонкиОбъектовДоступныеОбъектыСистемы.ОбъектСистемы = ВариантыОбъектов.Владелец
	|			И (КолонкиОбъектовДоступныеОбъектыСистемы.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|				ИЛИ КолонкиОбъектовДоступныеОбъектыСистемы.ВариантОбъекта = ВариантыОбъектов.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_ТипыТемп.Приоритет) КАК Приоритет,
	|	ВТ_ТипыТемп.Колонка КАК Колонка,
	|	ВТ_ТипыТемп.ТипОбъектСистемы КАК ТипОбъектСистемы,
	|	ВТ_ТипыТемп.ТипВариантОбъекта КАК ТипВариантОбъекта
	|ПОМЕСТИТЬ ВТ_ТипыМакс
	|ИЗ
	|	ВТ_ТипыТемп КАК ВТ_ТипыТемп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТипыТемп.Колонка,
	|	ВТ_ТипыТемп.ТипОбъектСистемы,
	|	ВТ_ТипыТемп.ТипВариантОбъекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТипыТемп.Колонка КАК Колонка,
	|	ВТ_ТипыТемп.ТипОбъектСистемы КАК ТипОбъектСистемы,
	|	ВТ_ТипыТемп.ТипВариантОбъекта КАК ТипВариантОбъекта
	|ПОМЕСТИТЬ ВТ_Типы
	|ИЗ
	|	ВТ_ТипыМакс КАК ВТ_ТипыМакс
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТипыТемп КАК ВТ_ТипыТемп
	|		ПО ВТ_ТипыМакс.Приоритет = ВТ_ТипыТемп.Приоритет
	|			И ВТ_ТипыМакс.Колонка = ВТ_ТипыТемп.Колонка
	|			И ВТ_ТипыМакс.ТипОбъектСистемы = ВТ_ТипыТемп.ТипОбъектСистемы
	|			И ВТ_ТипыМакс.ТипВариантОбъекта = ВТ_ТипыТемп.ТипВариантОбъекта
	|ГДЕ
	|	НЕ ВТ_ТипыТемп.Исключить
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Колонки.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_Колонки.ВариантОбъекта КАК ВариантОбъекта,
	|	ВТ_Колонки.Колонка КАК Колонка,
	|	ВЫБОР
	|		КОГДА ВТ_Колонки.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Корректировка)
	|				ИЛИ ВТ_Колонки.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Версия)
	|			ТОГДА ВТ_Колонки.ОбъектСистемы
	|		ИНАЧЕ ВТ_Типы.ТипОбъектСистемы
	|	КОНЕЦ КАК ТипОбъектСистемы,
	|	ВЫБОР
	|		КОГДА ВТ_Колонки.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Корректировка)
	|				ИЛИ ВТ_Колонки.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Версия)
	|			ТОГДА ВТ_Колонки.ВариантОбъекта
	|		ИНАЧЕ ВТ_Типы.ТипВариантОбъекта
	|	КОНЕЦ КАК ТипВариантОбъекта,
	|	ВТ_Колонки.СохранятьКолонку КАК СохранятьКолонку,
	|	ВТ_Колонки.ВводКолонки КАК ВводКолонки
	|ПОМЕСТИТЬ ВТ_КолонкиТипы
	|ИЗ
	|	ВТ_Колонки КАК ВТ_Колонки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Типы КАК ВТ_Типы
	|		ПО ВТ_Колонки.Колонка = ВТ_Типы.Колонка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОбъектыСистемыОснования.ВариантОбъектаОснования = ЗНАЧЕНИЕ(СПРАВОЧНИК.ВариантыОбъектов.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	ОбъектыСистемыОснования.Основание КАК ОбъектСистемыОснование,
	|	ЕСТЬNULL(ВариантыОбъектов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)) КАК ВариантОбъектаОснования,
	|	ОбъектыСистемыОснования.Ссылка КАК ОбъектСистемы,
	|	ОбъектыСистемыОснования.ВариантОбъекта КАК ВариантОбъекта,
	|	ОбъектыСистемыОснования.ИсключитьОснование КАК ИсключитьОснование,
	|	ОбъектыСистемыОснования.ИсключитьВариантОбъекта КАК ИсключитьВариантОбъекта
	|ПОМЕСТИТЬ ВТ_ОснованияТемп
	|ИЗ
	|	Справочник.ОбъектыСистемы.Основания КАК ОбъектыСистемыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОбъектов КАК ВариантыОбъектов
	|		ПО (ОбъектыСистемыОснования.Основание.ВестиВариантыОбъектов)
	|			И (НЕ ВариантыОбъектов.ПометкаУдаления)
	|			И ОбъектыСистемыОснования.Основание = ВариантыОбъектов.Владелец
	|			И (ОбъектыСистемыОснования.ВариантОбъектаОснования = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|				ИЛИ ОбъектыСистемыОснования.ВариантОбъектаОснования = ВариантыОбъектов.Ссылка)
	|ГДЕ
	|	НЕ ОбъектыСистемыОснования.Ссылка.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_ОснованияТемп.Приоритет) КАК Приоритет,
	|	ВТ_ОснованияТемп.ОбъектСистемыОснование КАК ОбъектСистемыОснование,
	|	ВТ_ОснованияТемп.ВариантОбъектаОснования КАК ВариантОбъектаОснования,
	|	ВТ_ОснованияТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_ОснованияТемп.ВариантОбъекта КАК ВариантОбъекта
	|ПОМЕСТИТЬ ВТ_ОснованияМакс
	|ИЗ
	|	ВТ_ОснованияТемп КАК ВТ_ОснованияТемп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОснованияТемп.ОбъектСистемыОснование,
	|	ВТ_ОснованияТемп.ВариантОбъектаОснования,
	|	ВТ_ОснованияТемп.ОбъектСистемы,
	|	ВТ_ОснованияТемп.ВариантОбъекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОснованияТемп.ОбъектСистемыОснование КАК ОбъектСистемыОснование,
	|	ВТ_ОснованияТемп.ВариантОбъектаОснования КАК ВариантОбъектаОснования,
	|	ВТ_ОснованияТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_ОснованияТемп.ВариантОбъекта КАК ВариантОбъекта,
	|	ВТ_ОснованияТемп.ИсключитьВариантОбъекта КАК ИсключитьВариантОбъекта
	|ПОМЕСТИТЬ ВТ_Основания
	|ИЗ
	|	ВТ_ОснованияМакс КАК ВТ_ОснованияМакс
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОснованияТемп КАК ВТ_ОснованияТемп
	|		ПО ВТ_ОснованияМакс.Приоритет = ВТ_ОснованияТемп.Приоритет
	|			И ВТ_ОснованияМакс.ОбъектСистемыОснование = ВТ_ОснованияТемп.ОбъектСистемыОснование
	|			И ВТ_ОснованияМакс.ВариантОбъектаОснования = ВТ_ОснованияТемп.ВариантОбъектаОснования
	|			И ВТ_ОснованияМакс.ОбъектСистемы = ВТ_ОснованияТемп.ОбъектСистемы
	|			И ВТ_ОснованияМакс.ВариантОбъекта = ВТ_ОснованияТемп.ВариантОбъекта
	|ГДЕ
	|	НЕ ВТ_ОснованияТемп.ИсключитьОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ОснованияТемп
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ОснованияМакс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТ_Основания.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	ВТ_Основания.ОбъектСистемыОснование КАК ОбъектСистемыОснование,
	|	ВТ_Основания.ВариантОбъектаОснования КАК ВариантОбъектаОснования,
	|	ВТ_Основания.ОбъектСистемы КАК ОбъектСистемы,
	|	ЕСТЬNULL(ВариантыОбъектов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)) КАК ВариантОбъекта,
	|	ВТ_Основания.ИсключитьВариантОбъекта КАК ИсключитьВариантОбъекта
	|ПОМЕСТИТЬ ВТ_ОснованияТемп
	|ИЗ
	|	ВТ_Основания КАК ВТ_Основания
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОбъектов КАК ВариантыОбъектов
	|		ПО (ВТ_Основания.ОбъектСистемы.ВестиВариантыОбъектов)
	|			И (НЕ ВариантыОбъектов.ПометкаУдаления)
	|			И ВТ_Основания.ОбъектСистемы = ВариантыОбъектов.Владелец
	|			И (ВТ_Основания.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|				ИЛИ ВТ_Основания.ВариантОбъекта = ВариантыОбъектов.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_ОснованияТемп.Приоритет) КАК Приоритет,
	|	ВТ_ОснованияТемп.ОбъектСистемыОснование КАК ОбъектСистемыОснование,
	|	ВТ_ОснованияТемп.ВариантОбъектаОснования КАК ВариантОбъектаОснования,
	|	ВТ_ОснованияТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_ОснованияТемп.ВариантОбъекта КАК ВариантОбъекта
	|ПОМЕСТИТЬ ВТ_ОснованияМакс
	|ИЗ
	|	ВТ_ОснованияТемп КАК ВТ_ОснованияТемп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОснованияТемп.ОбъектСистемыОснование,
	|	ВТ_ОснованияТемп.ВариантОбъектаОснования,
	|	ВТ_ОснованияТемп.ОбъектСистемы,
	|	ВТ_ОснованияТемп.ВариантОбъекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Основания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОснованияТемп.ОбъектСистемыОснование КАК ОбъектСистемыОснование,
	|	ВТ_ОснованияТемп.ВариантОбъектаОснования КАК ВариантОбъектаОснования,
	|	ВТ_ОснованияТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_ОснованияТемп.ВариантОбъекта КАК ВариантОбъекта
	|ПОМЕСТИТЬ ВТ_Основания
	|ИЗ
	|	ВТ_ОснованияМакс КАК ВТ_ОснованияМакс
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОснованияТемп КАК ВТ_ОснованияТемп
	|		ПО ВТ_ОснованияМакс.Приоритет = ВТ_ОснованияТемп.Приоритет
	|			И ВТ_ОснованияМакс.ОбъектСистемыОснование = ВТ_ОснованияТемп.ОбъектСистемыОснование
	|			И ВТ_ОснованияМакс.ВариантОбъектаОснования = ВТ_ОснованияТемп.ВариантОбъектаОснования
	|			И ВТ_ОснованияМакс.ОбъектСистемы = ВТ_ОснованияТемп.ОбъектСистемы
	|			И ВТ_ОснованияМакс.ВариантОбъекта = ВТ_ОснованияТемп.ВариантОбъекта
	|ГДЕ
	|	НЕ ВТ_ОснованияТемп.ИсключитьВариантОбъекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОбъектыСистемыИсточники.ВариантОбъектаИсточника = ЗНАЧЕНИЕ(СПРАВОЧНИК.ВариантыОбъектов.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	ОбъектыСистемыИсточники.Источник КАК ОбъектСистемыИсточник,
	|	ЕСТЬNULL(ВариантыОбъектов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)) КАК ВариантОбъектаИсточника,
	|	ОбъектыСистемыИсточники.Ссылка КАК ОбъектСистемы,
	|	ОбъектыСистемыИсточники.ВариантОбъекта КАК ВариантОбъекта,
	|	ОбъектыСистемыИсточники.ИсключитьИсточник КАК ИсключитьИсточник,
	|	ОбъектыСистемыИсточники.ИсключитьВариантОбъекта КАК ИсключитьВариантОбъекта
	|ПОМЕСТИТЬ ВТ_ИсточникиТемп
	|ИЗ
	|	Справочник.ОбъектыСистемы.Источники КАК ОбъектыСистемыИсточники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОбъектов КАК ВариантыОбъектов
	|		ПО (ОбъектыСистемыИсточники.Источник.ВестиВариантыОбъектов)
	|			И (НЕ ВариантыОбъектов.ПометкаУдаления)
	|			И ОбъектыСистемыИсточники.Источник = ВариантыОбъектов.Владелец
	|			И (ОбъектыСистемыИсточники.ВариантОбъектаИсточника = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|				ИЛИ ОбъектыСистемыИсточники.ВариантОбъектаИсточника = ВариантыОбъектов.Ссылка)
	|ГДЕ
	|	НЕ ОбъектыСистемыИсточники.Ссылка.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_ИсточникиТемп.Приоритет) КАК Приоритет,
	|	ВТ_ИсточникиТемп.ОбъектСистемыИсточник КАК ОбъектСистемыИсточник,
	|	ВТ_ИсточникиТемп.ВариантОбъектаИсточника КАК ВариантОбъектаИсточника,
	|	ВТ_ИсточникиТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_ИсточникиТемп.ВариантОбъекта КАК ВариантОбъекта
	|ПОМЕСТИТЬ ВТ_ИсточникиМакс
	|ИЗ
	|	ВТ_ИсточникиТемп КАК ВТ_ИсточникиТемп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ИсточникиТемп.ОбъектСистемыИсточник,
	|	ВТ_ИсточникиТемп.ВариантОбъектаИсточника,
	|	ВТ_ИсточникиТемп.ОбъектСистемы,
	|	ВТ_ИсточникиТемп.ВариантОбъекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсточникиТемп.ОбъектСистемыИсточник КАК ОбъектСистемыИсточник,
	|	ВТ_ИсточникиТемп.ВариантОбъектаИсточника КАК ВариантОбъектаИсточника,
	|	ВТ_ИсточникиТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_ИсточникиТемп.ВариантОбъекта КАК ВариантОбъекта,
	|	ВТ_ИсточникиТемп.ИсключитьВариантОбъекта КАК ИсключитьВариантОбъекта
	|ПОМЕСТИТЬ ВТ_Источники
	|ИЗ
	|	ВТ_ИсточникиМакс КАК ВТ_ИсточникиМакс
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсточникиТемп КАК ВТ_ИсточникиТемп
	|		ПО ВТ_ИсточникиМакс.Приоритет = ВТ_ИсточникиТемп.Приоритет
	|			И ВТ_ИсточникиМакс.ОбъектСистемыИсточник = ВТ_ИсточникиТемп.ОбъектСистемыИсточник
	|			И ВТ_ИсточникиМакс.ВариантОбъектаИсточника = ВТ_ИсточникиТемп.ВариантОбъектаИсточника
	|			И ВТ_ИсточникиМакс.ОбъектСистемы = ВТ_ИсточникиТемп.ОбъектСистемы
	|			И ВТ_ИсточникиМакс.ВариантОбъекта = ВТ_ИсточникиТемп.ВариантОбъекта
	|ГДЕ
	|	НЕ ВТ_ИсточникиТемп.ИсключитьИсточник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ИсточникиТемп
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ИсточникиМакс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТ_Источники.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	ВТ_Источники.ОбъектСистемыИсточник КАК ОбъектСистемыИсточник,
	|	ВТ_Источники.ВариантОбъектаИсточника КАК ВариантОбъектаИсточника,
	|	ВТ_Источники.ОбъектСистемы КАК ОбъектСистемы,
	|	ЕСТЬNULL(ВариантыОбъектов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)) КАК ВариантОбъекта,
	|	ВТ_Источники.ИсключитьВариантОбъекта КАК ИсключитьВариантОбъекта
	|ПОМЕСТИТЬ ВТ_ИсточникиТемп
	|ИЗ
	|	ВТ_Источники КАК ВТ_Источники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОбъектов КАК ВариантыОбъектов
	|		ПО (ВТ_Источники.ОбъектСистемы.ВестиВариантыОбъектов)
	|			И (НЕ ВариантыОбъектов.ПометкаУдаления)
	|			И ВТ_Источники.ОбъектСистемы = ВариантыОбъектов.Владелец
	|			И (ВТ_Источники.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|				ИЛИ ВТ_Источники.ВариантОбъекта = ВариантыОбъектов.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_ИсточникиТемп.Приоритет) КАК Приоритет,
	|	ВТ_ИсточникиТемп.ОбъектСистемыИсточник КАК ОбъектСистемыИсточник,
	|	ВТ_ИсточникиТемп.ВариантОбъектаИсточника КАК ВариантОбъектаИсточника,
	|	ВТ_ИсточникиТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_ИсточникиТемп.ВариантОбъекта КАК ВариантОбъекта
	|ПОМЕСТИТЬ ВТ_ИсточникиМакс
	|ИЗ
	|	ВТ_ИсточникиТемп КАК ВТ_ИсточникиТемп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ИсточникиТемп.ОбъектСистемыИсточник,
	|	ВТ_ИсточникиТемп.ВариантОбъектаИсточника,
	|	ВТ_ИсточникиТемп.ОбъектСистемы,
	|	ВТ_ИсточникиТемп.ВариантОбъекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Источники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсточникиТемп.ОбъектСистемыИсточник КАК ОбъектСистемыИсточник,
	|	ВТ_ИсточникиТемп.ВариантОбъектаИсточника КАК ВариантОбъектаИсточника,
	|	ВТ_ИсточникиТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_ИсточникиТемп.ВариантОбъекта КАК ВариантОбъекта
	|ПОМЕСТИТЬ ВТ_Источники
	|ИЗ
	|	ВТ_ИсточникиМакс КАК ВТ_ИсточникиМакс
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсточникиТемп КАК ВТ_ИсточникиТемп
	|		ПО ВТ_ИсточникиМакс.Приоритет = ВТ_ИсточникиТемп.Приоритет
	|			И ВТ_ИсточникиМакс.ОбъектСистемыИсточник = ВТ_ИсточникиТемп.ОбъектСистемыИсточник
	|			И ВТ_ИсточникиМакс.ВариантОбъектаИсточника = ВТ_ИсточникиТемп.ВариантОбъектаИсточника
	|			И ВТ_ИсточникиМакс.ОбъектСистемы = ВТ_ИсточникиТемп.ОбъектСистемы
	|			И ВТ_ИсточникиМакс.ВариантОбъекта = ВТ_ИсточникиТемп.ВариантОбъекта
	|ГДЕ
	|	НЕ ВТ_ИсточникиТемп.ИсключитьВариантОбъекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОбъектыСистемы.ОбъектСистемы.ТипОбъекта КАК ТипОбъекта,
	|	ВТ_ОбъектыСистемы.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_ОбъектыСистемы.ВариантОбъекта КАК ВариантОбъекта,
	|	ВТ_ОбъектыСистемы.Таблица КАК Таблица,
	|	ВТ_КолонкиТипы.Колонка КАК Колонка,
	|	ВТ_КолонкиТипы.ТипОбъектСистемы КАК ТипОбъектСистемы,
	|	ВТ_КолонкиТипы.ТипВариантОбъекта КАК ТипВариантОбъекта,
	|	NULL КАК Сортировка,
	|	ИСТИНА КАК СохранятьТаблицу,
	|	ИСТИНА КАК ВводТаблицы,
	|	ВТ_КолонкиТипы.СохранятьКолонку КАК СохранятьКолонку,
	|	ВТ_КолонкиТипы.ВводКолонки КАК ВводКолонки,
	|	ВЫБОР
	|		КОГДА ВТ_КолонкиТипы.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Номер)
	|			ТОГДА ""FindByNumber""
	|		КОГДА ВТ_КолонкиТипы.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Автор)
	|			ТОГДА ""User""
	|		КОГДА ВТ_КолонкиТипы.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Дата)
	|			ТОГДА ""InputFieldCalendar""
	|		КОГДА ВТ_КолонкиТипы.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Наименование)
	|			ТОГДА ""FormattedString""
	|		КОГДА ВТ_КолонкиТипы.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Корректировка)
	|			ТОГДА ""ChangeListItem""
	|		КОГДА ВТ_КолонкиТипы.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.ВидДвижения)
	|			ТОГДА ""SwitchActivity""
	|		КОГДА ВТ_КолонкиТипы.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Версия)
	|			ТОГДА ""GanttChart""
	|		ИНАЧЕ ""Attribute""
	|	КОНЕЦ КАК ИмяКартинкиКолонки
	|ПОМЕСТИТЬ ВТ_Итог
	|ИЗ
	|	ВТ_ОбъектыСистемы КАК ВТ_ОбъектыСистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КолонкиТипы КАК ВТ_КолонкиТипы
	|		ПО ВТ_ОбъектыСистемы.ОбъектСистемы = ВТ_КолонкиТипы.ОбъектСистемы
	|			И ВТ_ОбъектыСистемы.ВариантОбъекта = ВТ_КолонкиТипы.ВариантОбъекта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Таблицы.ОбъектСистемы.ТипОбъекта,
	|	ВТ_Таблицы.ОбъектСистемы,
	|	ВТ_Таблицы.ВариантОбъекта,
	|	ВТ_Таблицы.Таблица,
	|	ВТ_КолонкиТипы.Колонка,
	|	ВТ_КолонкиТипы.ТипОбъектСистемы,
	|	ВТ_КолонкиТипы.ТипВариантОбъекта,
	|	NULL,
	|	ВТ_Таблицы.СохранятьТаблицу,
	|	ВТ_Таблицы.ВводТаблицы,
	|	ВТ_КолонкиТипы.СохранятьКолонку,
	|	ВТ_КолонкиТипы.ВводКолонки,
	|	ВЫБОР
	|		КОГДА ВТ_КолонкиТипы.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.СтрокаТаблицы)
	|			ТОГДА ""ChartOfCalculationTypesObject""
	|		КОГДА ВТ_КолонкиТипы.Колонка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.ВидДвижения)
	|			ТОГДА ""SwitchActivity""
	|		ИНАЧЕ ""Attribute""
	|	КОНЕЦ
	|ИЗ
	|	ВТ_Таблицы КАК ВТ_Таблицы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КолонкиТипы КАК ВТ_КолонкиТипы
	|		ПО ВТ_Таблицы.Таблица = ВТ_КолонкиТипы.ОбъектСистемы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Источники.ОбъектСистемы.ТипОбъекта,
	|	ВТ_Источники.ОбъектСистемы,
	|	ВТ_Источники.ВариантОбъекта,
	|	ВТ_Источники.ОбъектСистемы,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Источник),
	|	ВТ_Источники.ОбъектСистемыИсточник,
	|	ВТ_Источники.ВариантОбъектаИсточника,
	|	NULL,
	|	ИСТИНА,
	|	ИСТИНА,
	|	ИСТИНА,
	|	ИСТИНА,
	|	""OpenFromMainServer""
	|ИЗ
	|	ВТ_Источники КАК ВТ_Источники
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Основания.ОбъектСистемы.ТипОбъекта,
	|	ВТ_Основания.ОбъектСистемы,
	|	ВТ_Основания.ВариантОбъекта,
	|	ВТ_Основания.ОбъектСистемы,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.Основание),
	|	ВТ_Основания.ОбъектСистемыОснование,
	|	ВТ_Основания.ВариантОбъектаОснования,
	|	NULL,
	|	ИСТИНА,
	|	ИСТИНА,
	|	ИСТИНА,
	|	ИСТИНА,
	|	""InputOnBasis""
	|ИЗ
	|	ВТ_Основания КАК ВТ_Основания
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ТипыОбъектов.РазрезДанных),
	|	РазрезыДанныхКолонокиРазрезаДанных.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка),
	|	РазрезыДанныхКолонокиРазрезаДанных.Ссылка,
	|	РазрезыДанныхКолонокиРазрезаДанных.КолонкаРазрезаДанных,
	|	NULL,
	|	NULL,
	|	99 - РазрезыДанныхКолонокиРазрезаДанных.НомерСтроки,
	|	ИСТИНА,
	|	ИСТИНА,
	|	ИСТИНА,
	|	ИСТИНА,
	|	ВЫБОР
	|		КОГДА РазрезыДанныхКолонокиРазрезаДанных.ТипКолонкиРегистра = 1
	|			ТОГДА ""SwitchActivity""
	|		КОГДА РазрезыДанныхКолонокиРазрезаДанных.ТипКолонкиРегистра = 2
	|			ТОГДА ""InputFieldCalendar""
	|		КОГДА РазрезыДанныхКолонокиРазрезаДанных.ТипКолонкиРегистра = 3
	|			ТОГДА ""Dimension""
	|		КОГДА РазрезыДанныхКолонокиРазрезаДанных.ТипКолонкиРегистра = 4
	|			ТОГДА ""Resource""
	|		ИНАЧЕ ""Attribute""
	|	КОНЕЦ
	|ИЗ
	|	Справочник.РазрезыДанных.КолонокиРазрезаДанных КАК РазрезыДанныхКолонокиРазрезаДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВариантыОбъектов.Владелец КАК ОбъектыСистемы,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВариантыОбъектов.Ссылка) КАК КоличествоВариантовОбъектов
	|ПОМЕСТИТЬ ВТ_КоличествоВариантовОбъектов
	|ИЗ
	|	Справочник.ВариантыОбъектов КАК ВариантыОбъектов
	|ГДЕ
	|	ВариантыОбъектов.Владелец.ВестиВариантыОбъектов
	|	И НЕ ВариантыОбъектов.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ВариантыОбъектов.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ТО"" + ВТ_Итог.ТипОбъекта.Код КАК ТипОбъектаКод,
	|	ВТ_Итог.ОбъектСистемы КАК ОбъектСистемы,
	|	""ОС"" + ВТ_Итог.ОбъектСистемы.Код КАК ОбъектСистемыКод,
	|	ВТ_Итог.ОбъектСистемы.Наименование КАК ОбъектСистемыНаименование,
	|	ВТ_Итог.ВариантОбъекта КАК ВариантОбъекта,
	|	""ВО"" + ВТ_Итог.ВариантОбъекта.Код КАК ВариантОбъектаКод,
	|	ВТ_Итог.ВариантОбъекта.Наименование КАК ВариантОбъектаНаименование,
	|	ВТ_Итог.Таблица КАК Таблица,
	|	""Т"" + ВТ_Итог.Таблица.Код КАК ТаблицаКод,
	|	ВТ_Итог.Таблица.Наименование КАК ТаблицаНаименование,
	|	ВТ_Итог.Колонка КАК Колонка,
	|	""Р"" + ВТ_Итог.Колонка.Код КАК КолонкаКод,
	|	ВТ_Итог.Колонка.Наименование КАК КолонкаНаименование,
	|	""ТО"" + ВТ_Итог.ТипОбъектСистемы.ТипОбъекта.Код КАК ТипТипОбъектаКод,
	|	ВТ_Итог.ТипОбъектСистемы КАК ТипОбъектСистемы,
	|	""ОС"" + ВТ_Итог.ТипОбъектСистемы.Код КАК ТипОбъектСистемыКод,
	|	ВТ_Итог.ТипВариантОбъекта КАК ТипВариантОбъекта,
	|	""ВО"" + ВТ_Итог.ТипВариантОбъекта.Код КАК ТипВариантОбъектаКод,
	|	ЕСТЬNULL(ВТ_КоличествоВариантовОбъектов.КоличествоВариантовОбъектов, 0) КАК КоличествоВариантовОбъектов,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_Итог.Сортировка ЕСТЬ NULL
	|			ТОГДА ВТ_Итог.Сортировка
	|		КОГДА ВТ_Итог.ОбъектСистемы = ВТ_Итог.Таблица
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сортировка,
	|	ВТ_Итог.СохранятьТаблицу КАК СохранятьТаблицу,
	|	ВТ_Итог.ВводТаблицы КАК ВводТаблицы,
	|	ВТ_Итог.СохранятьКолонку КАК СохранятьКолонку,
	|	ВТ_Итог.ВводКолонки КАК ВводКолонки,
	|	ВТ_Итог.ИмяКартинкиКолонки КАК ИмяКартинкиКолонки
	|ИЗ
	|	ВТ_Итог КАК ВТ_Итог
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоВариантовОбъектов КАК ВТ_КоличествоВариантовОбъектов
	|		ПО ВТ_Итог.ТипОбъектСистемы = ВТ_КоличествоВариантовОбъектов.ОбъектыСистемы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипОбъектаКод,
	|	ОбъектСистемыНаименование,
	|	ВариантОбъектаКод,
	|	Сортировка УБЫВ,
	|	КолонкаКод
	|ИТОГИ
	|	МИНИМУМ(ТипОбъектаКод),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТипВариантОбъекта),
	|	МИНИМУМ(КоличествоВариантовОбъектов),
	|	МИНИМУМ(Сортировка),
	|	МИНИМУМ(СохранятьТаблицу),
	|	МИНИМУМ(ВводТаблицы),
	|	МИНИМУМ(СохранятьКолонку),
	|	МИНИМУМ(ВводКолонки),
	|	МИНИМУМ(ИмяКартинкиКолонки)
	|ПО
	|	ОбъектСистемы,
	|	ВариантОбъекта,
	|	Таблица,
	|	Колонка,
	|	ТипОбъектСистемы";
КонецФункции

&НаСервере
Функция ПолучитьЗапросПроводки()
	Возврат
	
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОбъектыСистемыРазрезыДанных.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет,
	|	ОбъектыСистемыРазрезыДанных.Ссылка КАК ОбъектСистемы,
	|	ЕСТЬNULL(ВариантыОбъектов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)) КАК ВариантОбъекта,
	|	ВЫБОР
	|		КОГДА ОбъектыСистемыРазрезыДанных.Таблица = ЗНАЧЕНИЕ(Справочник.ОбъектыСистемы.ПустаяСсылка)
	|			ТОГДА ОбъектыСистемыРазрезыДанных.Ссылка
	|		КОГДА ОбъектыСистемыКолонкиРазрезовДанных.КолонкаОбъекта ЕСТЬ NULL
	|			ТОГДА ОбъектыСистемыРазрезыДанных.Ссылка
	|		КОГДА ОбъектыСистемыКолонкиРазрезовДанных.КолонкаОбъекта <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.ПустаяСсылка)
	|			ТОГДА ОбъектыСистемыРазрезыДанных.Ссылка
	|		ИНАЧЕ ОбъектыСистемыРазрезыДанных.Таблица
	|	КОНЕЦ КАК Таблица,
	|	ВЫБОР
	|		КОГДА ОбъектыСистемыРазрезыДанных.Таблица = ЗНАЧЕНИЕ(Справочник.ОбъектыСистемы.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ОбъектыСистемыКолонкиРазрезовДанных.КолонкаОбъекта, ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.ПустаяСсылка))
	|		КОГДА ОбъектыСистемыКолонкиРазрезовДанных.КолонкаОбъекта ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.ПустаяСсылка)
	|		КОГДА ОбъектыСистемыКолонкиРазрезовДанных.КолонкаОбъекта = ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.ПустаяСсылка)
	|			ТОГДА ОбъектыСистемыКолонкиРазрезовДанных.КолонкаТаблицы
	|		ИНАЧЕ ОбъектыСистемыКолонкиРазрезовДанных.КолонкаОбъекта
	|	КОНЕЦ КАК Колонка,
	|	ЕСТЬNULL(ОбъектыСистемыРазрезыДанных.РазрезДанных, ЗНАЧЕНИЕ(ПланВидовХарактеристик.КолонкиОбъектов.ПустаяСсылка)) КАК РазрезДанных,
	|	ОбъектыСистемыКолонкиРазрезовДанных.КолонкаРазрезаДанных КАК КолонкаРазрезаДанных,
	|	ОбъектыСистемыРазрезыДанных.Исключить КАК Исключить,
	|	РазрезыДанныхНастройкиКолонокРегистра.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_РазрезыДанныхТемп
	|ИЗ
	|	Справочник.ОбъектыСистемы.РазрезыДанных КАК ОбъектыСистемыРазрезыДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОбъектов КАК ВариантыОбъектов
	|		ПО (ОбъектыСистемыРазрезыДанных.Ссылка.ВестиВариантыОбъектов)
	|			И (НЕ ВариантыОбъектов.ПометкаУдаления)
	|			И ОбъектыСистемыРазрезыДанных.Ссылка = ВариантыОбъектов.Владелец
	|			И (ОбъектыСистемыРазрезыДанных.ВариантОбъекта = ЗНАЧЕНИЕ(Справочник.ВариантыОбъектов.ПустаяСсылка)
	|				ИЛИ ОбъектыСистемыРазрезыДанных.ВариантОбъекта = ВариантыОбъектов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСистемы.КолонкиРазрезовДанных КАК ОбъектыСистемыКолонкиРазрезовДанных
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РазрезыДанных.КолонокиРазрезаДанных КАК РазрезыДанныхНастройкиКолонокРегистра
	|			ПО ОбъектыСистемыКолонкиРазрезовДанных.РазрезДанных = РазрезыДанныхНастройкиКолонокРегистра.Ссылка
	|				И ОбъектыСистемыКолонкиРазрезовДанных.КолонкаРазрезаДанных = РазрезыДанныхНастройкиКолонокРегистра.КолонкаРазрезаДанных
	|		ПО ОбъектыСистемыРазрезыДанных.Ссылка = ОбъектыСистемыКолонкиРазрезовДанных.Ссылка
	|			И ОбъектыСистемыРазрезыДанных.ВариантОбъекта = ОбъектыСистемыКолонкиРазрезовДанных.ВариантОбъекта
	|			И ОбъектыСистемыРазрезыДанных.РазрезДанных = ОбъектыСистемыКолонкиРазрезовДанных.РазрезДанных
	|ГДЕ
	|	НЕ ОбъектыСистемыРазрезыДанных.Ссылка.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_РазрезыДанныхТемп.Приоритет) КАК Приоритет,
	|	ВТ_РазрезыДанныхТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	ВТ_РазрезыДанныхТемп.ВариантОбъекта КАК ВариантОбъекта,
	|	ВТ_РазрезыДанныхТемп.РазрезДанных КАК РазрезДанных
	|ПОМЕСТИТЬ ВТ_РазрезыДанныхМакс
	|ИЗ
	|	ВТ_РазрезыДанныхТемп КАК ВТ_РазрезыДанныхТемп
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РазрезыДанныхТемп.ОбъектСистемы,
	|	ВТ_РазрезыДанныхТемп.ВариантОбъекта,
	|	ВТ_РазрезыДанныхТемп.РазрезДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ТО"" + ВТ_РазрезыДанныхТемп.ОбъектСистемы.ТипОбъекта.Код КАК ТипОбъектаКод,
	|	ВТ_РазрезыДанныхТемп.ОбъектСистемы КАК ОбъектСистемы,
	|	""ОС"" + ВТ_РазрезыДанныхТемп.ОбъектСистемы.Код КАК ОбъектСистемыКод,
	|	ВТ_РазрезыДанныхТемп.ВариантОбъекта КАК ВариантОбъекта,
	|	""ВО"" + ВТ_РазрезыДанныхТемп.ВариантОбъекта.Код КАК ВариантОбъектаКод,
	|	ВТ_РазрезыДанныхТемп.Таблица КАК Таблица,
	|	""Т"" + ВТ_РазрезыДанныхТемп.Таблица.Код КАК ТаблицаКод,
	|	ВТ_РазрезыДанныхТемп.Колонка КАК Колонка,
	|	""Р"" + ВТ_РазрезыДанныхТемп.Колонка.Код КАК КолонкаКод,
	|	""ТО"" + (ЗНАЧЕНИЕ(Справочник.ТипыОбъектов.РазрезДанных)).Код КАК РазрезДанныхТипОбъектаКод,
	|	ВТ_РазрезыДанныхТемп.РазрезДанных КАК РазрезДанных,
	|	""ОС"" + ВТ_РазрезыДанныхТемп.РазрезДанных.Код КАК РазрезДанныхКод,
	|	""Т"" + ВТ_РазрезыДанныхТемп.РазрезДанных.Код КАК РазрезДанныхТаблицаКод,
	|	ВТ_РазрезыДанныхТемп.КолонкаРазрезаДанных КАК КолонкаРазрезаДанных,
	|	""Р"" + ВТ_РазрезыДанныхТемп.КолонкаРазрезаДанных.Код КАК КолонкаРазрезаДанныхКод,
	|	ВТ_РазрезыДанныхТемп.КолонкаРазрезаДанных.Наименование КАК КолонкаРазрезаДанныхНаименование,
	|	ВТ_РазрезыДанныхТемп.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ_РазрезыДанныхМакс КАК ВТ_РазрезыДанныхМакс
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазрезыДанныхТемп КАК ВТ_РазрезыДанныхТемп
	|		ПО ВТ_РазрезыДанныхМакс.Приоритет = ВТ_РазрезыДанныхТемп.Приоритет
	|			И ВТ_РазрезыДанныхМакс.ОбъектСистемы = ВТ_РазрезыДанныхТемп.ОбъектСистемы
	|			И ВТ_РазрезыДанныхМакс.ВариантОбъекта = ВТ_РазрезыДанныхТемп.ВариантОбъекта
	|			И ВТ_РазрезыДанныхМакс.РазрезДанных = ВТ_РазрезыДанныхТемп.РазрезДанных
	|ГДЕ
	|	НЕ ВТ_РазрезыДанныхТемп.Исключить
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_РазрезыДанныхТемп.НомерСтроки
	|ИТОГИ
	|	МИНИМУМ(РазрезДанныхТипОбъектаКод),
	|	МИНИМУМ(НомерСтроки)
	|ПО
	|	РазрезДанных,
	|	КолонкаРазрезаДанных";
КонецФункции



&НаСервере
Функция ПолучитьНомерЛинии(ИнформацияПоНомерамЛиний, СтрокаЛинии);
	НомераЛиний = ИнформацияПоНомерамЛиний.Получить(СтрокаЛинии.ИдентификаторОбъектСистемы);
	
	Если НомераЛиний = Неопределено Тогда
		НомераЛиний = Новый Соответствие;
		
		ИнформацияПоНомерамЛиний.Вставить(СтрокаЛинии.ИдентификаторОбъектСистемы, НомераЛиний);
	КонецЕсли;
	
	НомерЛинии = НомераЛиний.Получить(СтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъекта);
	
	Если НомерЛинии = Неопределено Тогда
		НомерЛинии = НомераЛиний.Количество() + 1;
		
		НомераЛиний.Вставить(СтрокаЛинии.ИдентификаторОбъектСистемыВариантОбъекта, НомерЛинии);
	КонецЕсли;
	
	Возврат НомерЛинии;
КонецФункции



////



&НаКлиенте
Процедура ГрафическаяСхемаБДВыбор(Элемент)
	Если Элементы.ГрафическаяСхемаБД.ТекущийЭлемент <> Неопределено Тогда
		ИскомоеИмя = Элементы.ГрафическаяСхемаБД.ТекущийЭлемент.Имя;
		
		Для Каждого ИзмененныйЭлемент Из ИзмененныеЭлементы Цикл
			Если ИзмененныйЭлемент.Пометка Тогда
				ИзмененныйЭлемент.Значение.ЦветФона = СериализаторXDTO.XMLЗначение(Тип("Цвет"), ИзмененныйЭлемент.Представление);
			Иначе
				ИзмененныйЭлемент.Значение.ЦветЛинии = СериализаторXDTO.XMLЗначение(Тип("Цвет"), ИзмененныйЭлемент.Представление);
				ИзмененныйЭлемент.Значение.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная, 1);
			КонецЕсли;
		КонецЦикла;
		
		ИзмененныеЭлементы.Очистить();
		
		МассивОбъектовСистемыВариантовОбъектовРазрезойДанных = ОбъектыСистемыВариантыОбъектовРазрезыДанных.НайтиСтроки(Новый Структура("Идентификатор", ИскомоеИмя));
		
		Если МассивОбъектовСистемыВариантовОбъектовРазрезойДанных.Количество() > 0 Тогда
			ПоказатьЗначение(, МассивОбъектовСистемыВариантовОбъектовРазрезойДанных[0].ОбъектСистемыВариантОбъектаРазрезДанных);
		КонецЕсли;
	КонецЕсли;
	
	//Если Элементы.ГрафическаяСхемаБД.ТекущийЭлемент <> Неопределено Тогда
	//	НайденныеСтроки = ДобавленныеОбъектыСистемы.НайтиСтроки(Новый Структура("ИдентификаторОбъектСистемы", Элементы.ГрафическаяСхемаБД.ТекущийЭлемент.Имя));
	//	
	//	Если НайденныеСтроки.Количество() > 0 Тогда
	//		ПоказатьЗначение(, НайденныеСтроки[0].ОбъектСистемы);
	//	КонецЕсли;
	//КонецЕсли;
	//
	//ПоказатьОповещениеПользователя("Типы данных:", ,
	//"        Документы: 
	//|                - х
	//|                - хх
	//|        Справочники:
	//|                - ххх
	//|                - хххх", ,
	//СтатусОповещенияПользователя.Информация,
	//УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ГрафическаяСхемаБДПриАктивизации(Элемент)
	//Если Элементы.ГрафическаяСхемаБД.ТекущийЭлемент <> Неопределено
	//	И Элементы.ГрафическаяСхемаБД.ТекущийЭлемент.Имя = "ПервыйОбъектГС" Тогда
	//	Возврат;
	//КонецЕсли;
	//
	Для Каждого ИзмененныйЭлемент Из ИзмененныеЭлементы Цикл
		Если ИзмененныйЭлемент.Пометка Тогда
			ИзмененныйЭлемент.Значение.ЦветФона = СериализаторXDTO.XMLЗначение(Тип("Цвет"), ИзмененныйЭлемент.Представление);
		Иначе
			ИзмененныйЭлемент.Значение.ЦветЛинии = СериализаторXDTO.XMLЗначение(Тип("Цвет"), ИзмененныйЭлемент.Представление);
			ИзмененныйЭлемент.Значение.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная, 1);
		КонецЕсли;
	КонецЦикла;
	
	ИзмененныеЭлементы.Очистить();
	
	Если Элементы.ГрафическаяСхемаБД.ТекущийЭлемент <> Неопределено Тогда
		СтрокиДляПодсветки1 = Линии.НайтиСтроки(Новый Структура("ИдентификаторКолонка", Элементы.ГрафическаяСхемаБД.ТекущийЭлемент.Имя));
		СтрокиДляПодсветки2 = Линии.НайтиСтроки(Новый Структура("ИдентификаторОбъектСистемыВариантОбъекта", Элементы.ГрафическаяСхемаБД.ТекущийЭлемент.Имя));
		СтрокиДляПодсветки3 = Линии.НайтиСтроки(Новый Структура("ИдентификаторОбъектСистемы", Элементы.ГрафическаяСхемаБД.ТекущийЭлемент.Имя));
		СтрокиДляПодсветки4 = Линии.НайтиСтроки(Новый Структура("ИдентификаторОбъектСистемыКонец", Элементы.ГрафическаяСхемаБД.ТекущийЭлемент.Имя));
		СтрокиДляПодсветки5 = Линии.НайтиСтроки(Новый Структура("ИдентификаторОбъектСистемыВариантОбъектаКонец", Элементы.ГрафическаяСхемаБД.ТекущийЭлемент.Имя));
		
		ОбработатьСтрокиДляПодсветки(СтрокиДляПодсветки1);
		ОбработатьСтрокиДляПодсветки(СтрокиДляПодсветки2);
		ОбработатьСтрокиДляПодсветки(СтрокиДляПодсветки3);
		ОбработатьСтрокиДляПодсветки(СтрокиДляПодсветки4);
		ОбработатьСтрокиДляПодсветки(СтрокиДляПодсветки5);
	КонецЕсли;
	
	ТекущийЭлементТемп = Элементы.ГрафическаяСхемаБД.ТекущийЭлемент;
	ЭтотОбъект.ОбновитьОтображениеДанных(Элементы.ГрафическаяСхемаБД);
	Элементы.ГрафическаяСхемаБД.ТекущийЭлемент = ТекущийЭлементТемп;
	
	//Элементы.ГрафическаяСхемаБД.ТекущийЭлемент = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура МасштабФормаПриИзменении(Элемент)
	МасштабФормаТемп = (10 - МасштабФорма) * 10;
	Масштаб = МасштабФормаТемп;
	
	Элементы.ДекорацияВывестиСтруктуруБД.Высота = Окр(100 / МасштабФормаТемп + 0.5, 0, 0);
	
	Если МасштабФормаТемп > 50 Тогда
		Элементы.ДекорацияПолоса.Видимость = Ложь;
	Иначе
		Элементы.ДекорацияПолоса.Видимость = Истина;
		Элементы.ДекорацияПолоса.Ширина = 50 / МасштабФормаТемп;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСтрокиДляПодсветки(СтрокиДляПодсветки)
	Для Каждого СтрокаДляПодсветки Из СтрокиДляПодсветки Цикл
		ЭлементДляИзменения = ГрафическаяСхемаБД.ЭлементыГрафическойСхемы.Найти(СтрокаДляПодсветки.ИдентификаторЛинии);
		
		Если ИзмененныеЭлементы.НайтиПоЗначению(ЭлементДляИзменения) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ИзмененныеЭлементы.Добавить(ЭлементДляИзменения, СериализаторXDTO.XMLСтрока(ЭлементДляИзменения.ЦветЛинии));
		ЭлементДляИзменения.ЦветЛинии = Новый Цвет(255, 0, 0);
		ЭлементДляИзменения.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная, 3);
	КонецЦикла;
КонецПроцедуры





